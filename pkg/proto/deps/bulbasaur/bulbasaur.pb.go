// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: proto/deps/bulbasaur/bulbasaur.proto

package bulbasaur

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TokenType int32

const (
	TokenType_TOKEN_TYPE_UNKNOWN       TokenType = 0
	TokenType_TOKEN_TYPE_ACCESS_TOKEN  TokenType = 1
	TokenType_TOKEN_TYPE_REFRESH_TOKEN TokenType = 2
)

// Enum value maps for TokenType.
var (
	TokenType_name = map[int32]string{
		0: "TOKEN_TYPE_UNKNOWN",
		1: "TOKEN_TYPE_ACCESS_TOKEN",
		2: "TOKEN_TYPE_REFRESH_TOKEN",
	}
	TokenType_value = map[string]int32{
		"TOKEN_TYPE_UNKNOWN":       0,
		"TOKEN_TYPE_ACCESS_TOKEN":  1,
		"TOKEN_TYPE_REFRESH_TOKEN": 2,
	}
)

func (x TokenType) Enum() *TokenType {
	p := new(TokenType)
	*p = x
	return p
}

func (x TokenType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TokenType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_deps_bulbasaur_bulbasaur_proto_enumTypes[0].Descriptor()
}

func (TokenType) Type() protoreflect.EnumType {
	return &file_proto_deps_bulbasaur_bulbasaur_proto_enumTypes[0]
}

func (x TokenType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TokenType.Descriptor instead.
func (TokenType) EnumDescriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{0}
}

type Role int32

const (
	Role_ROLE_UNKNOWN          Role = 0
	Role_ROLE_CANDIDATE        Role = 1
	Role_ROLE_BUSINESS_MANAGER Role = 2
)

// Enum value maps for Role.
var (
	Role_name = map[int32]string{
		0: "ROLE_UNKNOWN",
		1: "ROLE_CANDIDATE",
		2: "ROLE_BUSINESS_MANAGER",
	}
	Role_value = map[string]int32{
		"ROLE_UNKNOWN":          0,
		"ROLE_CANDIDATE":        1,
		"ROLE_BUSINESS_MANAGER": 2,
	}
)

func (x Role) Enum() *Role {
	p := new(Role)
	*p = x
	return p
}

func (x Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Role) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_deps_bulbasaur_bulbasaur_proto_enumTypes[1].Descriptor()
}

func (Role) Type() protoreflect.EnumType {
	return &file_proto_deps_bulbasaur_bulbasaur_proto_enumTypes[1]
}

func (x Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Role.Descriptor instead.
func (Role) EnumDescriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{1}
}

type SubscriptionPlan int32

const (
	SubscriptionPlan_SUBSCRIPTION_PLAN_UNSPECIFIED SubscriptionPlan = 0
	SubscriptionPlan_MONTHLY                       SubscriptionPlan = 1
	SubscriptionPlan_ANNUAL                        SubscriptionPlan = 2
)

// Enum value maps for SubscriptionPlan.
var (
	SubscriptionPlan_name = map[int32]string{
		0: "SUBSCRIPTION_PLAN_UNSPECIFIED",
		1: "MONTHLY",
		2: "ANNUAL",
	}
	SubscriptionPlan_value = map[string]int32{
		"SUBSCRIPTION_PLAN_UNSPECIFIED": 0,
		"MONTHLY":                       1,
		"ANNUAL":                        2,
	}
)

func (x SubscriptionPlan) Enum() *SubscriptionPlan {
	p := new(SubscriptionPlan)
	*p = x
	return p
}

func (x SubscriptionPlan) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscriptionPlan) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_deps_bulbasaur_bulbasaur_proto_enumTypes[2].Descriptor()
}

func (SubscriptionPlan) Type() protoreflect.EnumType {
	return &file_proto_deps_bulbasaur_bulbasaur_proto_enumTypes[2]
}

func (x SubscriptionPlan) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscriptionPlan.Descriptor instead.
func (SubscriptionPlan) EnumDescriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{2}
}

type TokenInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SafeId       string `protobuf:"bytes,1,opt,name=safe_id,json=safeId,proto3" json:"safe_id,omitempty"`
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	AccessToken  string `protobuf:"bytes,3,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Role         Role   `protobuf:"varint,4,opt,name=role,proto3,enum=bulbasaur.Role" json:"role,omitempty"`
	UserId       uint64 `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *TokenInfo) Reset() {
	*x = TokenInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenInfo) ProtoMessage() {}

func (x *TokenInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenInfo.ProtoReflect.Descriptor instead.
func (*TokenInfo) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{0}
}

func (x *TokenInfo) GetSafeId() string {
	if x != nil {
		return x.SafeId
	}
	return ""
}

func (x *TokenInfo) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *TokenInfo) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *TokenInfo) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_ROLE_UNKNOWN
}

func (x *TokenInfo) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string    `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Email    string    `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Role     Role      `protobuf:"varint,3,opt,name=role,proto3,enum=bulbasaur.Role" json:"role,omitempty"`
	Id       uint64    `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Metadata *Metadata `protobuf:"bytes,5,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{1}
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_ROLE_UNKNOWN
}

func (x *User) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type MeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *MeResponse) Reset() {
	*x = MeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeResponse) ProtoMessage() {}

func (x *MeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeResponse.ProtoReflect.Descriptor instead.
func (*MeResponse) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{2}
}

func (x *MeResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type ListUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []uint64 `protobuf:"varint,1,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{3}
}

func (x *ListUsersRequest) GetUserIds() []uint64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type ListUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{4}
}

func (x *ListUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type SignUpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Credential:
	//
	//	*SignUpRequest_Local_
	//	*SignUpRequest_Google_
	Credential isSignUpRequest_Credential `protobuf_oneof:"credential"`
	DeviceId   *string                    `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3,oneof" json:"device_id,omitempty"`
	DeviceName *string                    `protobuf:"bytes,4,opt,name=device_name,json=deviceName,proto3,oneof" json:"device_name,omitempty"`
	Role       Role                       `protobuf:"varint,5,opt,name=role,proto3,enum=bulbasaur.Role" json:"role,omitempty"`
	Metadata   *Metadata                  `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *SignUpRequest) Reset() {
	*x = SignUpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignUpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUpRequest) ProtoMessage() {}

func (x *SignUpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUpRequest.ProtoReflect.Descriptor instead.
func (*SignUpRequest) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{5}
}

func (m *SignUpRequest) GetCredential() isSignUpRequest_Credential {
	if m != nil {
		return m.Credential
	}
	return nil
}

func (x *SignUpRequest) GetLocal() *SignUpRequest_Local {
	if x, ok := x.GetCredential().(*SignUpRequest_Local_); ok {
		return x.Local
	}
	return nil
}

func (x *SignUpRequest) GetGoogle() *SignUpRequest_Google {
	if x, ok := x.GetCredential().(*SignUpRequest_Google_); ok {
		return x.Google
	}
	return nil
}

func (x *SignUpRequest) GetDeviceId() string {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return ""
}

func (x *SignUpRequest) GetDeviceName() string {
	if x != nil && x.DeviceName != nil {
		return *x.DeviceName
	}
	return ""
}

func (x *SignUpRequest) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_ROLE_UNKNOWN
}

func (x *SignUpRequest) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type isSignUpRequest_Credential interface {
	isSignUpRequest_Credential()
}

type SignUpRequest_Local_ struct {
	Local *SignUpRequest_Local `protobuf:"bytes,1,opt,name=local,proto3,oneof"`
}

type SignUpRequest_Google_ struct {
	Google *SignUpRequest_Google `protobuf:"bytes,2,opt,name=google,proto3,oneof"`
}

func (*SignUpRequest_Local_) isSignUpRequest_Credential() {}

func (*SignUpRequest_Google_) isSignUpRequest_Credential() {}

type SignUpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User      *User      `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	TokenInfo *TokenInfo `protobuf:"bytes,2,opt,name=token_info,json=tokenInfo,proto3" json:"token_info,omitempty"`
}

func (x *SignUpResponse) Reset() {
	*x = SignUpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignUpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUpResponse) ProtoMessage() {}

func (x *SignUpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUpResponse.ProtoReflect.Descriptor instead.
func (*SignUpResponse) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{6}
}

func (x *SignUpResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *SignUpResponse) GetTokenInfo() *TokenInfo {
	if x != nil {
		return x.TokenInfo
	}
	return nil
}

type SignInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Credential:
	//
	//	*SignInRequest_Local_
	//	*SignInRequest_Google_
	Credential isSignInRequest_Credential `protobuf_oneof:"credential"`
	DeviceId   *string                    `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3,oneof" json:"device_id,omitempty"`
	DeviceName *string                    `protobuf:"bytes,4,opt,name=device_name,json=deviceName,proto3,oneof" json:"device_name,omitempty"`
}

func (x *SignInRequest) Reset() {
	*x = SignInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInRequest) ProtoMessage() {}

func (x *SignInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInRequest.ProtoReflect.Descriptor instead.
func (*SignInRequest) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{7}
}

func (m *SignInRequest) GetCredential() isSignInRequest_Credential {
	if m != nil {
		return m.Credential
	}
	return nil
}

func (x *SignInRequest) GetLocal() *SignInRequest_Local {
	if x, ok := x.GetCredential().(*SignInRequest_Local_); ok {
		return x.Local
	}
	return nil
}

func (x *SignInRequest) GetGoogle() *SignInRequest_Google {
	if x, ok := x.GetCredential().(*SignInRequest_Google_); ok {
		return x.Google
	}
	return nil
}

func (x *SignInRequest) GetDeviceId() string {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return ""
}

func (x *SignInRequest) GetDeviceName() string {
	if x != nil && x.DeviceName != nil {
		return *x.DeviceName
	}
	return ""
}

type isSignInRequest_Credential interface {
	isSignInRequest_Credential()
}

type SignInRequest_Local_ struct {
	Local *SignInRequest_Local `protobuf:"bytes,1,opt,name=local,proto3,oneof"`
}

type SignInRequest_Google_ struct {
	Google *SignInRequest_Google `protobuf:"bytes,2,opt,name=google,proto3,oneof"`
}

func (*SignInRequest_Local_) isSignInRequest_Credential() {}

func (*SignInRequest_Google_) isSignInRequest_Credential() {}

type SignInResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User      *User      `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	TokenInfo *TokenInfo `protobuf:"bytes,2,opt,name=token_info,json=tokenInfo,proto3" json:"token_info,omitempty"`
}

func (x *SignInResponse) Reset() {
	*x = SignInResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInResponse) ProtoMessage() {}

func (x *SignInResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInResponse.ProtoReflect.Descriptor instead.
func (*SignInResponse) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{8}
}

func (x *SignInResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *SignInResponse) GetTokenInfo() *TokenInfo {
	if x != nil {
		return x.TokenInfo
	}
	return nil
}

type RefreshTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenInfo *TokenInfo `protobuf:"bytes,1,opt,name=token_info,json=tokenInfo,proto3" json:"token_info,omitempty"`
}

func (x *RefreshTokenRequest) Reset() {
	*x = RefreshTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenRequest) ProtoMessage() {}

func (x *RefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*RefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{9}
}

func (x *RefreshTokenRequest) GetTokenInfo() *TokenInfo {
	if x != nil {
		return x.TokenInfo
	}
	return nil
}

type RefreshTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenInfo *TokenInfo `protobuf:"bytes,1,opt,name=token_info,json=tokenInfo,proto3" json:"token_info,omitempty"`
}

func (x *RefreshTokenResponse) Reset() {
	*x = RefreshTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenResponse) ProtoMessage() {}

func (x *RefreshTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenResponse.ProtoReflect.Descriptor instead.
func (*RefreshTokenResponse) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{10}
}

func (x *RefreshTokenResponse) GetTokenInfo() *TokenInfo {
	if x != nil {
		return x.TokenInfo
	}
	return nil
}

type UpdateMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *UpdateMetadataRequest) Reset() {
	*x = UpdateMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMetadataRequest) ProtoMessage() {}

func (x *UpdateMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMetadataRequest.ProtoReflect.Descriptor instead.
func (*UpdateMetadataRequest) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateMetadataRequest) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type EmailVerificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *EmailVerificationRequest) Reset() {
	*x = EmailVerificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailVerificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailVerificationRequest) ProtoMessage() {}

func (x *EmailVerificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailVerificationRequest.ProtoReflect.Descriptor instead.
func (*EmailVerificationRequest) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{12}
}

func (x *EmailVerificationRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type ResetCodeVerificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResetCode string `protobuf:"bytes,1,opt,name=resetCode,proto3" json:"resetCode,omitempty"`
}

func (x *ResetCodeVerificationRequest) Reset() {
	*x = ResetCodeVerificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetCodeVerificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCodeVerificationRequest) ProtoMessage() {}

func (x *ResetCodeVerificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCodeVerificationRequest.ProtoReflect.Descriptor instead.
func (*ResetCodeVerificationRequest) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{13}
}

func (x *ResetCodeVerificationRequest) GetResetCode() string {
	if x != nil {
		return x.ResetCode
	}
	return ""
}

type ResetCodeVerificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *ResetCodeVerificationResponse) Reset() {
	*x = ResetCodeVerificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetCodeVerificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCodeVerificationResponse) ProtoMessage() {}

func (x *ResetCodeVerificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCodeVerificationResponse.ProtoReflect.Descriptor instead.
func (*ResetCodeVerificationResponse) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{14}
}

func (x *ResetCodeVerificationResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type GenerateResetCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *GenerateResetCodeRequest) Reset() {
	*x = GenerateResetCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateResetCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateResetCodeRequest) ProtoMessage() {}

func (x *GenerateResetCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateResetCodeRequest.ProtoReflect.Descriptor instead.
func (*GenerateResetCodeRequest) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{15}
}

func (x *GenerateResetCodeRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type ResetPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email       string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	ResetCode   string `protobuf:"bytes,2,opt,name=resetCode,proto3" json:"resetCode,omitempty"`
	NewPassword string `protobuf:"bytes,3,opt,name=newPassword,proto3" json:"newPassword,omitempty"`
}

func (x *ResetPasswordRequest) Reset() {
	*x = ResetPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordRequest) ProtoMessage() {}

func (x *ResetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordRequest.ProtoReflect.Descriptor instead.
func (*ResetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{16}
}

func (x *ResetPasswordRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ResetPasswordRequest) GetResetCode() string {
	if x != nil {
		return x.ResetCode
	}
	return ""
}

func (x *ResetPasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fullname   *string `protobuf:"bytes,1,opt,name=fullname,proto3,oneof" json:"fullname,omitempty"`
	Company    *string `protobuf:"bytes,2,opt,name=company,proto3,oneof" json:"company,omitempty"`
	Country    *string `protobuf:"bytes,3,opt,name=country,proto3,oneof" json:"country,omitempty"`
	JobTitle   *string `protobuf:"bytes,4,opt,name=jobTitle,proto3,oneof" json:"jobTitle,omitempty"`
	AvatarPath *string `protobuf:"bytes,5,opt,name=avatarPath,proto3,oneof" json:"avatarPath,omitempty"`
	Gender     *string `protobuf:"bytes,6,opt,name=gender,proto3,oneof" json:"gender,omitempty"`
	Birthday   *string `protobuf:"bytes,7,opt,name=birthday,proto3,oneof" json:"birthday,omitempty"`
	Summary    *string `protobuf:"bytes,8,opt,name=summary,proto3,oneof" json:"summary,omitempty"`
	Website    *string `protobuf:"bytes,9,opt,name=website,proto3,oneof" json:"website,omitempty"`
	LinkedIn   *string `protobuf:"bytes,10,opt,name=linkedIn,proto3,oneof" json:"linkedIn,omitempty"`
	Education  *string `protobuf:"bytes,11,opt,name=education,proto3,oneof" json:"education,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{17}
}

func (x *Metadata) GetFullname() string {
	if x != nil && x.Fullname != nil {
		return *x.Fullname
	}
	return ""
}

func (x *Metadata) GetCompany() string {
	if x != nil && x.Company != nil {
		return *x.Company
	}
	return ""
}

func (x *Metadata) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

func (x *Metadata) GetJobTitle() string {
	if x != nil && x.JobTitle != nil {
		return *x.JobTitle
	}
	return ""
}

func (x *Metadata) GetAvatarPath() string {
	if x != nil && x.AvatarPath != nil {
		return *x.AvatarPath
	}
	return ""
}

func (x *Metadata) GetGender() string {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return ""
}

func (x *Metadata) GetBirthday() string {
	if x != nil && x.Birthday != nil {
		return *x.Birthday
	}
	return ""
}

func (x *Metadata) GetSummary() string {
	if x != nil && x.Summary != nil {
		return *x.Summary
	}
	return ""
}

func (x *Metadata) GetWebsite() string {
	if x != nil && x.Website != nil {
		return *x.Website
	}
	return ""
}

func (x *Metadata) GetLinkedIn() string {
	if x != nil && x.LinkedIn != nil {
		return *x.LinkedIn
	}
	return ""
}

func (x *Metadata) GetEducation() string {
	if x != nil && x.Education != nil {
		return *x.Education
	}
	return ""
}

type ChangePasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldPassword        string `protobuf:"bytes,1,opt,name=oldPassword,proto3" json:"oldPassword,omitempty"`
	NewPassword        string `protobuf:"bytes,2,opt,name=newPassword,proto3" json:"newPassword,omitempty"`
	ConfirmNewPassword string `protobuf:"bytes,3,opt,name=confirmNewPassword,proto3" json:"confirmNewPassword,omitempty"`
}

func (x *ChangePasswordRequest) Reset() {
	*x = ChangePasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordRequest) ProtoMessage() {}

func (x *ChangePasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordRequest.ProtoReflect.Descriptor instead.
func (*ChangePasswordRequest) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{18}
}

func (x *ChangePasswordRequest) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *ChangePasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

func (x *ChangePasswordRequest) GetConfirmNewPassword() string {
	if x != nil {
		return x.ConfirmNewPassword
	}
	return ""
}

type FindUserByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Roles []Role `protobuf:"varint,2,rep,packed,name=roles,proto3,enum=bulbasaur.Role" json:"roles,omitempty"`
}

func (x *FindUserByNameRequest) Reset() {
	*x = FindUserByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserByNameRequest) ProtoMessage() {}

func (x *FindUserByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserByNameRequest.ProtoReflect.Descriptor instead.
func (*FindUserByNameRequest) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{19}
}

func (x *FindUserByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FindUserByNameRequest) GetRoles() []Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

type FindUserByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *FindUserByNameResponse) Reset() {
	*x = FindUserByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserByNameResponse) ProtoMessage() {}

func (x *FindUserByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserByNameResponse.ProtoReflect.Descriptor instead.
func (*FindUserByNameResponse) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{20}
}

func (x *FindUserByNameResponse) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type FindUserByMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Metadata:
	//
	//	*FindUserByMetadataRequest_Name
	//	*FindUserByMetadataRequest_Company
	//	*FindUserByMetadataRequest_Country
	//	*FindUserByMetadataRequest_JobTitle
	Metadata isFindUserByMetadataRequest_Metadata `protobuf_oneof:"metadata"`
	Roles    []Role                               `protobuf:"varint,5,rep,packed,name=roles,proto3,enum=bulbasaur.Role" json:"roles,omitempty"`
}

func (x *FindUserByMetadataRequest) Reset() {
	*x = FindUserByMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserByMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserByMetadataRequest) ProtoMessage() {}

func (x *FindUserByMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserByMetadataRequest.ProtoReflect.Descriptor instead.
func (*FindUserByMetadataRequest) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{21}
}

func (m *FindUserByMetadataRequest) GetMetadata() isFindUserByMetadataRequest_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (x *FindUserByMetadataRequest) GetName() string {
	if x, ok := x.GetMetadata().(*FindUserByMetadataRequest_Name); ok {
		return x.Name
	}
	return ""
}

func (x *FindUserByMetadataRequest) GetCompany() string {
	if x, ok := x.GetMetadata().(*FindUserByMetadataRequest_Company); ok {
		return x.Company
	}
	return ""
}

func (x *FindUserByMetadataRequest) GetCountry() string {
	if x, ok := x.GetMetadata().(*FindUserByMetadataRequest_Country); ok {
		return x.Country
	}
	return ""
}

func (x *FindUserByMetadataRequest) GetJobTitle() string {
	if x, ok := x.GetMetadata().(*FindUserByMetadataRequest_JobTitle); ok {
		return x.JobTitle
	}
	return ""
}

func (x *FindUserByMetadataRequest) GetRoles() []Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

type isFindUserByMetadataRequest_Metadata interface {
	isFindUserByMetadataRequest_Metadata()
}

type FindUserByMetadataRequest_Name struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3,oneof"`
}

type FindUserByMetadataRequest_Company struct {
	Company string `protobuf:"bytes,2,opt,name=company,proto3,oneof"`
}

type FindUserByMetadataRequest_Country struct {
	Country string `protobuf:"bytes,3,opt,name=country,proto3,oneof"`
}

type FindUserByMetadataRequest_JobTitle struct {
	JobTitle string `protobuf:"bytes,4,opt,name=jobTitle,proto3,oneof"`
}

func (*FindUserByMetadataRequest_Name) isFindUserByMetadataRequest_Metadata() {}

func (*FindUserByMetadataRequest_Company) isFindUserByMetadataRequest_Metadata() {}

func (*FindUserByMetadataRequest_Country) isFindUserByMetadataRequest_Metadata() {}

func (*FindUserByMetadataRequest_JobTitle) isFindUserByMetadataRequest_Metadata() {}

type FindUserByMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *FindUserByMetadataResponse) Reset() {
	*x = FindUserByMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserByMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserByMetadataResponse) ProtoMessage() {}

func (x *FindUserByMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserByMetadataResponse.ProtoReflect.Descriptor instead.
func (*FindUserByMetadataResponse) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{22}
}

func (x *FindUserByMetadataResponse) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type IncreaseBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Amount float32 `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *IncreaseBalanceRequest) Reset() {
	*x = IncreaseBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncreaseBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncreaseBalanceRequest) ProtoMessage() {}

func (x *IncreaseBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncreaseBalanceRequest.ProtoReflect.Descriptor instead.
func (*IncreaseBalanceRequest) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{23}
}

func (x *IncreaseBalanceRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *IncreaseBalanceRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type IncreaseBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewBalance float32 `protobuf:"fixed32,1,opt,name=new_balance,json=newBalance,proto3" json:"new_balance,omitempty"`
}

func (x *IncreaseBalanceResponse) Reset() {
	*x = IncreaseBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncreaseBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncreaseBalanceResponse) ProtoMessage() {}

func (x *IncreaseBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncreaseBalanceResponse.ProtoReflect.Descriptor instead.
func (*IncreaseBalanceResponse) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{24}
}

func (x *IncreaseBalanceResponse) GetNewBalance() float32 {
	if x != nil {
		return x.NewBalance
	}
	return 0
}

type GetBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance        float32 `protobuf:"fixed32,1,opt,name=balance,proto3" json:"balance,omitempty"`
	IsPremium      bool    `protobuf:"varint,2,opt,name=is_premium,json=isPremium,proto3" json:"is_premium,omitempty"`
	PremiumExpires string  `protobuf:"bytes,3,opt,name=premium_expires,json=premiumExpires,proto3" json:"premium_expires,omitempty"`
}

func (x *GetBalanceResponse) Reset() {
	*x = GetBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceResponse) ProtoMessage() {}

func (x *GetBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetBalanceResponse) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{25}
}

func (x *GetBalanceResponse) GetBalance() float32 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *GetBalanceResponse) GetIsPremium() bool {
	if x != nil {
		return x.IsPremium
	}
	return false
}

func (x *GetBalanceResponse) GetPremiumExpires() string {
	if x != nil {
		return x.PremiumExpires
	}
	return ""
}

type SetPremiumRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan SubscriptionPlan `protobuf:"varint,1,opt,name=plan,proto3,enum=bulbasaur.SubscriptionPlan" json:"plan,omitempty"`
}

func (x *SetPremiumRequest) Reset() {
	*x = SetPremiumRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPremiumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPremiumRequest) ProtoMessage() {}

func (x *SetPremiumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPremiumRequest.ProtoReflect.Descriptor instead.
func (*SetPremiumRequest) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{26}
}

func (x *SetPremiumRequest) GetPlan() SubscriptionPlan {
	if x != nil {
		return x.Plan
	}
	return SubscriptionPlan_SUBSCRIPTION_PLAN_UNSPECIFIED
}

type SetPremiumResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SetPremiumResponse) Reset() {
	*x = SetPremiumResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPremiumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPremiumResponse) ProtoMessage() {}

func (x *SetPremiumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPremiumResponse.ProtoReflect.Descriptor instead.
func (*SetPremiumResponse) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{27}
}

func (x *SetPremiumResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetBalanceRequest) Reset() {
	*x = GetBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceRequest) ProtoMessage() {}

func (x *GetBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetBalanceRequest) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{28}
}

func (x *GetBalanceRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DecreaseBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Amount float32 `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *DecreaseBalanceRequest) Reset() {
	*x = DecreaseBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecreaseBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecreaseBalanceRequest) ProtoMessage() {}

func (x *DecreaseBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecreaseBalanceRequest.ProtoReflect.Descriptor instead.
func (*DecreaseBalanceRequest) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{29}
}

func (x *DecreaseBalanceRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DecreaseBalanceRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type DecreaseBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DecreaseBalanceResponse) Reset() {
	*x = DecreaseBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecreaseBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecreaseBalanceResponse) ProtoMessage() {}

func (x *DecreaseBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecreaseBalanceResponse.ProtoReflect.Descriptor instead.
func (*DecreaseBalanceResponse) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{30}
}

func (x *DecreaseBalanceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type TransactionHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount    float32 `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Note      string  `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
	CreatedAt string  `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *TransactionHistory) Reset() {
	*x = TransactionHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionHistory) ProtoMessage() {}

func (x *TransactionHistory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionHistory.ProtoReflect.Descriptor instead.
func (*TransactionHistory) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{31}
}

func (x *TransactionHistory) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TransactionHistory) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransactionHistory) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *TransactionHistory) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type GetTransactionHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	History []*TransactionHistory `protobuf:"bytes,1,rep,name=history,proto3" json:"history,omitempty"`
}

func (x *GetTransactionHistoryResponse) Reset() {
	*x = GetTransactionHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionHistoryResponse) ProtoMessage() {}

func (x *GetTransactionHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionHistoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{32}
}

func (x *GetTransactionHistoryResponse) GetHistory() []*TransactionHistory {
	if x != nil {
		return x.History
	}
	return nil
}

type StartTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Amount float32 `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Note   string  `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *StartTransactionRequest) Reset() {
	*x = StartTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTransactionRequest) ProtoMessage() {}

func (x *StartTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTransactionRequest.ProtoReflect.Descriptor instead.
func (*StartTransactionRequest) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{33}
}

func (x *StartTransactionRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *StartTransactionRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *StartTransactionRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type StartTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionCode string `protobuf:"bytes,1,opt,name=transaction_code,json=transactionCode,proto3" json:"transaction_code,omitempty"`
}

func (x *StartTransactionResponse) Reset() {
	*x = StartTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTransactionResponse) ProtoMessage() {}

func (x *StartTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTransactionResponse.ProtoReflect.Descriptor instead.
func (*StartTransactionResponse) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{34}
}

func (x *StartTransactionResponse) GetTransactionCode() string {
	if x != nil {
		return x.TransactionCode
	}
	return ""
}

type CommitTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionCode string `protobuf:"bytes,1,opt,name=transaction_code,json=transactionCode,proto3" json:"transaction_code,omitempty"`
}

func (x *CommitTransactionRequest) Reset() {
	*x = CommitTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitTransactionRequest) ProtoMessage() {}

func (x *CommitTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitTransactionRequest.ProtoReflect.Descriptor instead.
func (*CommitTransactionRequest) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{35}
}

func (x *CommitTransactionRequest) GetTransactionCode() string {
	if x != nil {
		return x.TransactionCode
	}
	return ""
}

type CommitTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *CommitTransactionResponse) Reset() {
	*x = CommitTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitTransactionResponse) ProtoMessage() {}

func (x *CommitTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitTransactionResponse.ProtoReflect.Descriptor instead.
func (*CommitTransactionResponse) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{36}
}

func (x *CommitTransactionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type SignUpRequest_Local struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username        string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password        string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	ConfirmPassword string `protobuf:"bytes,3,opt,name=confirm_password,json=confirmPassword,proto3" json:"confirm_password,omitempty"`
	Email           string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Otp             string `protobuf:"bytes,9,opt,name=otp,proto3" json:"otp,omitempty"`
}

func (x *SignUpRequest_Local) Reset() {
	*x = SignUpRequest_Local{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignUpRequest_Local) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUpRequest_Local) ProtoMessage() {}

func (x *SignUpRequest_Local) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUpRequest_Local.ProtoReflect.Descriptor instead.
func (*SignUpRequest_Local) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{5, 0}
}

func (x *SignUpRequest_Local) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SignUpRequest_Local) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SignUpRequest_Local) GetConfirmPassword() string {
	if x != nil {
		return x.ConfirmPassword
	}
	return ""
}

func (x *SignUpRequest_Local) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SignUpRequest_Local) GetOtp() string {
	if x != nil {
		return x.Otp
	}
	return ""
}

type SignUpRequest_Google struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credential string `protobuf:"bytes,1,opt,name=credential,proto3" json:"credential,omitempty"`
}

func (x *SignUpRequest_Google) Reset() {
	*x = SignUpRequest_Google{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignUpRequest_Google) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUpRequest_Google) ProtoMessage() {}

func (x *SignUpRequest_Google) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUpRequest_Google.ProtoReflect.Descriptor instead.
func (*SignUpRequest_Google) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{5, 1}
}

func (x *SignUpRequest_Google) GetCredential() string {
	if x != nil {
		return x.Credential
	}
	return ""
}

type SignInRequest_Local struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *SignInRequest_Local) Reset() {
	*x = SignInRequest_Local{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInRequest_Local) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInRequest_Local) ProtoMessage() {}

func (x *SignInRequest_Local) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInRequest_Local.ProtoReflect.Descriptor instead.
func (*SignInRequest_Local) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{7, 0}
}

func (x *SignInRequest_Local) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SignInRequest_Local) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type SignInRequest_Google struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credential string `protobuf:"bytes,1,opt,name=credential,proto3" json:"credential,omitempty"`
}

func (x *SignInRequest_Google) Reset() {
	*x = SignInRequest_Google{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInRequest_Google) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInRequest_Google) ProtoMessage() {}

func (x *SignInRequest_Google) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInRequest_Google.ProtoReflect.Descriptor instead.
func (*SignInRequest_Google) Descriptor() ([]byte, []int) {
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP(), []int{7, 1}
}

func (x *SignInRequest_Google) GetCredential() string {
	if x != nil {
		return x.Credential
	}
	return ""
}

var File_proto_deps_bulbasaur_bulbasaur_proto protoreflect.FileDescriptor

var file_proto_deps_bulbasaur_bulbasaur_proto_rawDesc = []byte{
	0x0a, 0x24, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x65, 0x70, 0x73, 0x2f, 0x62, 0x75, 0x6c,
	0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2f, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75,
	0x72, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x01, 0x0a,
	0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x61,
	0x66, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x61, 0x66,
	0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x62, 0x75, 0x6c, 0x62,
	0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x75,
	0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x31, 0x0a, 0x0a,
	0x4d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61,
	0x73, 0x61, 0x75, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22,
	0x2d, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x3a,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x8b, 0x04, 0x0a, 0x0d, 0x53,
	0x69, 0x67, 0x6e, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x05,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x75,
	0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x06, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x06, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x24, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75,
	0x72, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x92, 0x01,
	0x0a, 0x05, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x6f, 0x74, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f,
	0x74, 0x70, 0x1a, 0x28, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x0c, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6a, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e,
	0x55, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61,
	0x73, 0x61, 0x75, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x33, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0xdb, 0x02, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75,
	0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x39,
	0x0a, 0x06, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x48,
	0x00, 0x52, 0x06, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x1a, 0x39, 0x0a, 0x05, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a, 0x28, 0x0a, 0x06,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x0c, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x6a, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x0a, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4a,
	0x0a, 0x13, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x75, 0x6c, 0x62,
	0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4b, 0x0a, 0x14, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61,
	0x75, 0x72, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x48, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x30, 0x0a, 0x18, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x22, 0x3c, 0x0a, 0x1c, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x35, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x30, 0x0a, 0x18, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x6c, 0x0a, 0x14, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xfb, 0x03, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x08, 0x6a, 0x6f, 0x62, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0a, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x07, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69,
	0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73,
	0x69, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64,
	0x49, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x6b,
	0x65, 0x64, 0x49, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x65, 0x64, 0x75, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x09, 0x65, 0x64,
	0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66,
	0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x6a, 0x6f, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x50, 0x61, 0x74, 0x68, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x64, 0x75,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8b, 0x01, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4e,
	0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0x52, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x2a, 0x0a, 0x16, 0x46, 0x69, 0x6e, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x22, 0xba, 0x01, 0x0a, 0x19, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x12, 0x1a, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x1c, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x6a, 0x6f, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25,
	0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x2e, 0x0a, 0x1a, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x22, 0x49, 0x0a, 0x16, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3a, 0x0a, 0x17,
	0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x6e, 0x65,
	0x77, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x76, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70,
	0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x6d, 0x69,
	0x75, 0x6d, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x22, 0x44, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e,
	0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x22, 0x2e, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x50, 0x72, 0x65,
	0x6d, 0x69, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x2c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x16, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x33, 0x0a, 0x17, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x6f, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x58, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73,
	0x61, 0x75, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22,
	0x5e, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22,
	0x45, 0x0a, 0x18, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x45, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x35, 0x0a,
	0x19, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x2a, 0x5e, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x4f, 0x4b,
	0x45, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x54,
	0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x46, 0x52, 0x45, 0x53, 0x48, 0x5f, 0x54, 0x4f, 0x4b,
	0x45, 0x4e, 0x10, 0x02, 0x2a, 0x47, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x0c,
	0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12,
	0x0a, 0x0e, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x49, 0x44, 0x41, 0x54, 0x45,
	0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x42, 0x55, 0x53, 0x49, 0x4e,
	0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x10, 0x02, 0x2a, 0x4e, 0x0a,
	0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61,
	0x6e, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x4c, 0x59, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x4e, 0x4e, 0x55, 0x41, 0x4c, 0x10, 0x02, 0x32, 0x92, 0x09,
	0x0a, 0x09, 0x42, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x12, 0x5d, 0x0a, 0x06, 0x53,
	0x69, 0x67, 0x6e, 0x55, 0x70, 0x12, 0x18, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75,
	0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x55, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75,
	0x72, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x5a, 0x0a, 0x06, 0x53, 0x69,
	0x67, 0x6e, 0x49, 0x6e, 0x12, 0x18, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72,
	0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x6e, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61,
	0x75, 0x72, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61,
	0x75, 0x72, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a,
	0x01, 0x2a, 0x22, 0x12, 0x2f, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2f, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x62, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x1b, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x62, 0x75, 0x6c, 0x62,
	0x61, 0x73, 0x61, 0x75, 0x72, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x7d, 0x0a, 0x12, 0x46, 0x69,
	0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x24, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61,
	0x75, 0x72, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x62, 0x75, 0x6c, 0x62, 0x61,
	0x73, 0x61, 0x75, 0x72, 0x2f, 0x66, 0x69, 0x6e, 0x64, 0x12, 0x74, 0x0a, 0x11, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61,
	0x75, 0x72, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x92, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x62, 0x75, 0x6c, 0x62,
	0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73,
	0x61, 0x75, 0x72, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x7a, 0x0a, 0x11, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x2e, 0x62, 0x75, 0x6c, 0x62,
	0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01,
	0x2a, 0x22, 0x1d, 0x2f, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x6d, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x1f, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75,
	0x72, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x80, 0x01, 0x0a, 0x0f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x21, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e,
	0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61,
	0x75, 0x72, 0x2e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75,
	0x72, 0x2f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x2d, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x32, 0xbf, 0x05, 0x0a, 0x07, 0x49, 0x76, 0x79, 0x73, 0x61, 0x75, 0x72, 0x12, 0x66,
	0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x20, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x69, 0x76, 0x79, 0x73, 0x61, 0x75, 0x72, 0x2f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x48, 0x0a, 0x02, 0x4d, 0x65, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72,
	0x2e, 0x4d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x69, 0x76, 0x79, 0x73, 0x61, 0x75, 0x72, 0x2f, 0x6d, 0x65,
	0x12, 0x6e, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x20, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x22, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x69, 0x76, 0x79, 0x73, 0x61, 0x75,
	0x72, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x51, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x4f, 0x75, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x11, 0x12, 0x0f, 0x2f, 0x69, 0x76, 0x79, 0x73, 0x61, 0x75, 0x72, 0x2f, 0x6c, 0x6f, 0x67,
	0x6f, 0x75, 0x74, 0x12, 0x5d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x62, 0x75, 0x6c, 0x62,
	0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12,
	0x12, 0x10, 0x2f, 0x69, 0x76, 0x79, 0x73, 0x61, 0x75, 0x72, 0x2f, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x66, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d,
	0x12, 0x1c, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x53, 0x65, 0x74,
	0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x72,
	0x65, 0x6d, 0x69, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x69, 0x76, 0x79, 0x73, 0x61,
	0x75, 0x72, 0x2f, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x12, 0x78, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x62, 0x75,
	0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f,
	0x69, 0x76, 0x79, 0x73, 0x61, 0x75, 0x72, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x32, 0x95, 0x06, 0x0a, 0x08, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x61, 0x75,
	0x72, 0x12, 0x7a, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75,
	0x72, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d,
	0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x76, 0x65, 0x6e, 0x75, 0x73, 0x61, 0x75, 0x72, 0x2f, 0x66,
	0x69, 0x6e, 0x64, 0x75, 0x73, 0x65, 0x72, 0x62, 0x79, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x7f, 0x0a,
	0x0f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x21, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x49, 0x6e, 0x63,
	0x72, 0x65, 0x61, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e,
	0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a,
	0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x76, 0x65, 0x6e, 0x75, 0x73, 0x61, 0x75, 0x72, 0x2f, 0x69, 0x6e,
	0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x2d, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x6e,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x2e, 0x62,
	0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x62, 0x75, 0x6c,
	0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x65, 0x6e, 0x75, 0x73, 0x61, 0x75, 0x72, 0x2f, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x89,
	0x01, 0x0a, 0x0f, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x21, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x44,
	0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75,
	0x72, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24, 0x2f, 0x76, 0x65, 0x6e, 0x75, 0x73, 0x61, 0x75, 0x72, 0x2f,
	0x64, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x2d, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x84, 0x01, 0x0a, 0x10, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x22, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21,
	0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x76, 0x65, 0x6e, 0x75, 0x73, 0x61, 0x75, 0x72, 0x2f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x88, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73,
	0x61, 0x75, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x62,
	0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f,
	0x76, 0x65, 0x6e, 0x75, 0x73, 0x61, 0x75, 0x72, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x42, 0x19, 0x5a, 0x17,
	0x6d, 0x79, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x62, 0x75,
	0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_deps_bulbasaur_bulbasaur_proto_rawDescOnce sync.Once
	file_proto_deps_bulbasaur_bulbasaur_proto_rawDescData = file_proto_deps_bulbasaur_bulbasaur_proto_rawDesc
)

func file_proto_deps_bulbasaur_bulbasaur_proto_rawDescGZIP() []byte {
	file_proto_deps_bulbasaur_bulbasaur_proto_rawDescOnce.Do(func() {
		file_proto_deps_bulbasaur_bulbasaur_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_deps_bulbasaur_bulbasaur_proto_rawDescData)
	})
	return file_proto_deps_bulbasaur_bulbasaur_proto_rawDescData
}

var file_proto_deps_bulbasaur_bulbasaur_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_proto_deps_bulbasaur_bulbasaur_proto_goTypes = []interface{}{
	(TokenType)(0),                        // 0: bulbasaur.TokenType
	(Role)(0),                             // 1: bulbasaur.Role
	(SubscriptionPlan)(0),                 // 2: bulbasaur.SubscriptionPlan
	(*TokenInfo)(nil),                     // 3: bulbasaur.TokenInfo
	(*User)(nil),                          // 4: bulbasaur.User
	(*MeResponse)(nil),                    // 5: bulbasaur.MeResponse
	(*ListUsersRequest)(nil),              // 6: bulbasaur.ListUsersRequest
	(*ListUsersResponse)(nil),             // 7: bulbasaur.ListUsersResponse
	(*SignUpRequest)(nil),                 // 8: bulbasaur.SignUpRequest
	(*SignUpResponse)(nil),                // 9: bulbasaur.SignUpResponse
	(*SignInRequest)(nil),                 // 10: bulbasaur.SignInRequest
	(*SignInResponse)(nil),                // 11: bulbasaur.SignInResponse
	(*RefreshTokenRequest)(nil),           // 12: bulbasaur.RefreshTokenRequest
	(*RefreshTokenResponse)(nil),          // 13: bulbasaur.RefreshTokenResponse
	(*UpdateMetadataRequest)(nil),         // 14: bulbasaur.UpdateMetadataRequest
	(*EmailVerificationRequest)(nil),      // 15: bulbasaur.EmailVerificationRequest
	(*ResetCodeVerificationRequest)(nil),  // 16: bulbasaur.ResetCodeVerificationRequest
	(*ResetCodeVerificationResponse)(nil), // 17: bulbasaur.ResetCodeVerificationResponse
	(*GenerateResetCodeRequest)(nil),      // 18: bulbasaur.GenerateResetCodeRequest
	(*ResetPasswordRequest)(nil),          // 19: bulbasaur.ResetPasswordRequest
	(*Metadata)(nil),                      // 20: bulbasaur.metadata
	(*ChangePasswordRequest)(nil),         // 21: bulbasaur.ChangePasswordRequest
	(*FindUserByNameRequest)(nil),         // 22: bulbasaur.FindUserByNameRequest
	(*FindUserByNameResponse)(nil),        // 23: bulbasaur.FindUserByNameResponse
	(*FindUserByMetadataRequest)(nil),     // 24: bulbasaur.FindUserByMetadataRequest
	(*FindUserByMetadataResponse)(nil),    // 25: bulbasaur.FindUserByMetadataResponse
	(*IncreaseBalanceRequest)(nil),        // 26: bulbasaur.IncreaseBalanceRequest
	(*IncreaseBalanceResponse)(nil),       // 27: bulbasaur.IncreaseBalanceResponse
	(*GetBalanceResponse)(nil),            // 28: bulbasaur.GetBalanceResponse
	(*SetPremiumRequest)(nil),             // 29: bulbasaur.SetPremiumRequest
	(*SetPremiumResponse)(nil),            // 30: bulbasaur.SetPremiumResponse
	(*GetBalanceRequest)(nil),             // 31: bulbasaur.GetBalanceRequest
	(*DecreaseBalanceRequest)(nil),        // 32: bulbasaur.DecreaseBalanceRequest
	(*DecreaseBalanceResponse)(nil),       // 33: bulbasaur.DecreaseBalanceResponse
	(*TransactionHistory)(nil),            // 34: bulbasaur.TransactionHistory
	(*GetTransactionHistoryResponse)(nil), // 35: bulbasaur.GetTransactionHistoryResponse
	(*StartTransactionRequest)(nil),       // 36: bulbasaur.StartTransactionRequest
	(*StartTransactionResponse)(nil),      // 37: bulbasaur.StartTransactionResponse
	(*CommitTransactionRequest)(nil),      // 38: bulbasaur.CommitTransactionRequest
	(*CommitTransactionResponse)(nil),     // 39: bulbasaur.CommitTransactionResponse
	(*SignUpRequest_Local)(nil),           // 40: bulbasaur.SignUpRequest.Local
	(*SignUpRequest_Google)(nil),          // 41: bulbasaur.SignUpRequest.Google
	(*SignInRequest_Local)(nil),           // 42: bulbasaur.SignInRequest.Local
	(*SignInRequest_Google)(nil),          // 43: bulbasaur.SignInRequest.Google
	(*emptypb.Empty)(nil),                 // 44: google.protobuf.Empty
}
var file_proto_deps_bulbasaur_bulbasaur_proto_depIdxs = []int32{
	1,  // 0: bulbasaur.TokenInfo.role:type_name -> bulbasaur.Role
	1,  // 1: bulbasaur.User.role:type_name -> bulbasaur.Role
	20, // 2: bulbasaur.User.metadata:type_name -> bulbasaur.metadata
	4,  // 3: bulbasaur.MeResponse.user:type_name -> bulbasaur.User
	4,  // 4: bulbasaur.ListUsersResponse.users:type_name -> bulbasaur.User
	40, // 5: bulbasaur.SignUpRequest.local:type_name -> bulbasaur.SignUpRequest.Local
	41, // 6: bulbasaur.SignUpRequest.google:type_name -> bulbasaur.SignUpRequest.Google
	1,  // 7: bulbasaur.SignUpRequest.role:type_name -> bulbasaur.Role
	20, // 8: bulbasaur.SignUpRequest.metadata:type_name -> bulbasaur.metadata
	4,  // 9: bulbasaur.SignUpResponse.user:type_name -> bulbasaur.User
	3,  // 10: bulbasaur.SignUpResponse.token_info:type_name -> bulbasaur.TokenInfo
	42, // 11: bulbasaur.SignInRequest.local:type_name -> bulbasaur.SignInRequest.Local
	43, // 12: bulbasaur.SignInRequest.google:type_name -> bulbasaur.SignInRequest.Google
	4,  // 13: bulbasaur.SignInResponse.user:type_name -> bulbasaur.User
	3,  // 14: bulbasaur.SignInResponse.token_info:type_name -> bulbasaur.TokenInfo
	3,  // 15: bulbasaur.RefreshTokenRequest.token_info:type_name -> bulbasaur.TokenInfo
	3,  // 16: bulbasaur.RefreshTokenResponse.token_info:type_name -> bulbasaur.TokenInfo
	20, // 17: bulbasaur.UpdateMetadataRequest.metadata:type_name -> bulbasaur.metadata
	1,  // 18: bulbasaur.FindUserByNameRequest.roles:type_name -> bulbasaur.Role
	1,  // 19: bulbasaur.FindUserByMetadataRequest.roles:type_name -> bulbasaur.Role
	2,  // 20: bulbasaur.SetPremiumRequest.plan:type_name -> bulbasaur.SubscriptionPlan
	34, // 21: bulbasaur.GetTransactionHistoryResponse.history:type_name -> bulbasaur.TransactionHistory
	8,  // 22: bulbasaur.Bulbasaur.SignUp:input_type -> bulbasaur.SignUpRequest
	10, // 23: bulbasaur.Bulbasaur.SignIn:input_type -> bulbasaur.SignInRequest
	12, // 24: bulbasaur.Bulbasaur.RefreshToken:input_type -> bulbasaur.RefreshTokenRequest
	6,  // 25: bulbasaur.Bulbasaur.ListUsers:input_type -> bulbasaur.ListUsersRequest
	24, // 26: bulbasaur.Bulbasaur.FindUserByMetadata:input_type -> bulbasaur.FindUserByMetadataRequest
	15, // 27: bulbasaur.Bulbasaur.EmailVerification:input_type -> bulbasaur.EmailVerificationRequest
	16, // 28: bulbasaur.Bulbasaur.ResetCodeVerification:input_type -> bulbasaur.ResetCodeVerificationRequest
	18, // 29: bulbasaur.Bulbasaur.GenerateResetCode:input_type -> bulbasaur.GenerateResetCodeRequest
	19, // 30: bulbasaur.Bulbasaur.ResetPassword:input_type -> bulbasaur.ResetPasswordRequest
	26, // 31: bulbasaur.Bulbasaur.IncreaseBalance:input_type -> bulbasaur.IncreaseBalanceRequest
	14, // 32: bulbasaur.Ivysaur.UpdateMetadata:input_type -> bulbasaur.UpdateMetadataRequest
	44, // 33: bulbasaur.Ivysaur.Me:input_type -> google.protobuf.Empty
	21, // 34: bulbasaur.Ivysaur.ChangePassword:input_type -> bulbasaur.ChangePasswordRequest
	44, // 35: bulbasaur.Ivysaur.LogOut:input_type -> google.protobuf.Empty
	44, // 36: bulbasaur.Ivysaur.GetBalance:input_type -> google.protobuf.Empty
	29, // 37: bulbasaur.Ivysaur.SetPremium:input_type -> bulbasaur.SetPremiumRequest
	44, // 38: bulbasaur.Ivysaur.GetTransactionHistory:input_type -> google.protobuf.Empty
	22, // 39: bulbasaur.Venusaur.FindUserByName:input_type -> bulbasaur.FindUserByNameRequest
	26, // 40: bulbasaur.Venusaur.IncreaseBalance:input_type -> bulbasaur.IncreaseBalanceRequest
	31, // 41: bulbasaur.Venusaur.GetBalance:input_type -> bulbasaur.GetBalanceRequest
	32, // 42: bulbasaur.Venusaur.DecreaseBalance:input_type -> bulbasaur.DecreaseBalanceRequest
	36, // 43: bulbasaur.Venusaur.StartTransaction:input_type -> bulbasaur.StartTransactionRequest
	38, // 44: bulbasaur.Venusaur.CommitTransaction:input_type -> bulbasaur.CommitTransactionRequest
	9,  // 45: bulbasaur.Bulbasaur.SignUp:output_type -> bulbasaur.SignUpResponse
	11, // 46: bulbasaur.Bulbasaur.SignIn:output_type -> bulbasaur.SignInResponse
	13, // 47: bulbasaur.Bulbasaur.RefreshToken:output_type -> bulbasaur.RefreshTokenResponse
	7,  // 48: bulbasaur.Bulbasaur.ListUsers:output_type -> bulbasaur.ListUsersResponse
	25, // 49: bulbasaur.Bulbasaur.FindUserByMetadata:output_type -> bulbasaur.FindUserByMetadataResponse
	44, // 50: bulbasaur.Bulbasaur.EmailVerification:output_type -> google.protobuf.Empty
	17, // 51: bulbasaur.Bulbasaur.ResetCodeVerification:output_type -> bulbasaur.ResetCodeVerificationResponse
	44, // 52: bulbasaur.Bulbasaur.GenerateResetCode:output_type -> google.protobuf.Empty
	44, // 53: bulbasaur.Bulbasaur.ResetPassword:output_type -> google.protobuf.Empty
	27, // 54: bulbasaur.Bulbasaur.IncreaseBalance:output_type -> bulbasaur.IncreaseBalanceResponse
	44, // 55: bulbasaur.Ivysaur.UpdateMetadata:output_type -> google.protobuf.Empty
	5,  // 56: bulbasaur.Ivysaur.Me:output_type -> bulbasaur.MeResponse
	44, // 57: bulbasaur.Ivysaur.ChangePassword:output_type -> google.protobuf.Empty
	44, // 58: bulbasaur.Ivysaur.LogOut:output_type -> google.protobuf.Empty
	28, // 59: bulbasaur.Ivysaur.GetBalance:output_type -> bulbasaur.GetBalanceResponse
	30, // 60: bulbasaur.Ivysaur.SetPremium:output_type -> bulbasaur.SetPremiumResponse
	35, // 61: bulbasaur.Ivysaur.GetTransactionHistory:output_type -> bulbasaur.GetTransactionHistoryResponse
	23, // 62: bulbasaur.Venusaur.FindUserByName:output_type -> bulbasaur.FindUserByNameResponse
	27, // 63: bulbasaur.Venusaur.IncreaseBalance:output_type -> bulbasaur.IncreaseBalanceResponse
	28, // 64: bulbasaur.Venusaur.GetBalance:output_type -> bulbasaur.GetBalanceResponse
	33, // 65: bulbasaur.Venusaur.DecreaseBalance:output_type -> bulbasaur.DecreaseBalanceResponse
	37, // 66: bulbasaur.Venusaur.StartTransaction:output_type -> bulbasaur.StartTransactionResponse
	39, // 67: bulbasaur.Venusaur.CommitTransaction:output_type -> bulbasaur.CommitTransactionResponse
	45, // [45:68] is the sub-list for method output_type
	22, // [22:45] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_proto_deps_bulbasaur_bulbasaur_proto_init() }
func file_proto_deps_bulbasaur_bulbasaur_proto_init() {
	if File_proto_deps_bulbasaur_bulbasaur_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignUpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignUpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailVerificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetCodeVerificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetCodeVerificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateResetCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserByMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserByMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncreaseBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncreaseBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPremiumRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPremiumResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecreaseBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecreaseBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignUpRequest_Local); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignUpRequest_Google); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInRequest_Local); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInRequest_Google); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*SignUpRequest_Local_)(nil),
		(*SignUpRequest_Google_)(nil),
	}
	file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*SignInRequest_Local_)(nil),
		(*SignInRequest_Google_)(nil),
	}
	file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*FindUserByMetadataRequest_Name)(nil),
		(*FindUserByMetadataRequest_Company)(nil),
		(*FindUserByMetadataRequest_Country)(nil),
		(*FindUserByMetadataRequest_JobTitle)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_deps_bulbasaur_bulbasaur_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_proto_deps_bulbasaur_bulbasaur_proto_goTypes,
		DependencyIndexes: file_proto_deps_bulbasaur_bulbasaur_proto_depIdxs,
		EnumInfos:         file_proto_deps_bulbasaur_bulbasaur_proto_enumTypes,
		MessageInfos:      file_proto_deps_bulbasaur_bulbasaur_proto_msgTypes,
	}.Build()
	File_proto_deps_bulbasaur_bulbasaur_proto = out.File
	file_proto_deps_bulbasaur_bulbasaur_proto_rawDesc = nil
	file_proto_deps_bulbasaur_bulbasaur_proto_goTypes = nil
	file_proto_deps_bulbasaur_bulbasaur_proto_depIdxs = nil
}
