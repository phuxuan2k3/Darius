// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: proto/suggest/suggest.proto

package suggest

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// id: number;
// testId: string;
// text: string;
// points: number;
// type: "MCQ" | "LONG_ANSWER";
// detail: QuestionDetailCommonSchema;
type SuggestExamQuestionResponseV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Questions  []*SuggestExamQuestionResponseV2_Quetion `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`   // List of questions in the response
	RequestKey string                                   `protobuf:"bytes,2,opt,name=requestKey,proto3" json:"requestKey,omitempty"` // Unique key for the request, used for tracking
}

func (x *SuggestExamQuestionResponseV2) Reset() {
	*x = SuggestExamQuestionResponseV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestExamQuestionResponseV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestExamQuestionResponseV2) ProtoMessage() {}

func (x *SuggestExamQuestionResponseV2) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestExamQuestionResponseV2.ProtoReflect.Descriptor instead.
func (*SuggestExamQuestionResponseV2) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{0}
}

func (x *SuggestExamQuestionResponseV2) GetQuestions() []*SuggestExamQuestionResponseV2_Quetion {
	if x != nil {
		return x.Questions
	}
	return nil
}

func (x *SuggestExamQuestionResponseV2) GetRequestKey() string {
	if x != nil {
		return x.RequestKey
	}
	return ""
}

type DifficultyDistribution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Intern int32 `protobuf:"varint,1,opt,name=Intern,proto3" json:"Intern,omitempty"`
	Junior int32 `protobuf:"varint,2,opt,name=Junior,proto3" json:"Junior,omitempty"`
	Middle int32 `protobuf:"varint,3,opt,name=Middle,proto3" json:"Middle,omitempty"`
	Senior int32 `protobuf:"varint,4,opt,name=Senior,proto3" json:"Senior,omitempty"`
	Lead   int32 `protobuf:"varint,5,opt,name=Lead,proto3" json:"Lead,omitempty"`
	Expert int32 `protobuf:"varint,6,opt,name=Expert,proto3" json:"Expert,omitempty"`
}

func (x *DifficultyDistribution) Reset() {
	*x = DifficultyDistribution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DifficultyDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DifficultyDistribution) ProtoMessage() {}

func (x *DifficultyDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DifficultyDistribution.ProtoReflect.Descriptor instead.
func (*DifficultyDistribution) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{1}
}

func (x *DifficultyDistribution) GetIntern() int32 {
	if x != nil {
		return x.Intern
	}
	return 0
}

func (x *DifficultyDistribution) GetJunior() int32 {
	if x != nil {
		return x.Junior
	}
	return 0
}

func (x *DifficultyDistribution) GetMiddle() int32 {
	if x != nil {
		return x.Middle
	}
	return 0
}

func (x *DifficultyDistribution) GetSenior() int32 {
	if x != nil {
		return x.Senior
	}
	return 0
}

func (x *DifficultyDistribution) GetLead() int32 {
	if x != nil {
		return x.Lead
	}
	return 0
}

func (x *DifficultyDistribution) GetExpert() int32 {
	if x != nil {
		return x.Expert
	}
	return 0
}

type Topic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                   string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DifficultyDistribution *DifficultyDistribution `protobuf:"bytes,2,opt,name=difficultyDistribution,proto3" json:"difficultyDistribution,omitempty"`
}

func (x *Topic) Reset() {
	*x = Topic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Topic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Topic) ProtoMessage() {}

func (x *Topic) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Topic.ProtoReflect.Descriptor instead.
func (*Topic) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{2}
}

func (x *Topic) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Topic) GetDifficultyDistribution() *DifficultyDistribution {
	if x != nil {
		return x.DifficultyDistribution
	}
	return nil
}

type SuggestExamQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title        string                              `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description  string                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Language     string                              `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`   // English, Vietnamese, ...
	Seniority    string                              `protobuf:"bytes,4,opt,name=seniority,proto3" json:"seniority,omitempty"` // Intern, Junior, Middle, Senior, Lead, ...
	Topics       []*Topic                            `protobuf:"bytes,5,rep,name=topics,proto3" json:"topics,omitempty"`
	Creativity   int32                               `protobuf:"varint,6,opt,name=creativity,proto3" json:"creativity,omitempty"` // Creativity level from 1 to 10
	Context      *SuggestExamQuestionRequest_Context `protobuf:"bytes,7,opt,name=context,proto3" json:"context,omitempty"`
	QuestionType string                              `protobuf:"bytes,8,opt,name=questionType,proto3" json:"questionType,omitempty"`
	RequestKey   string                              `protobuf:"bytes,9,opt,name=requestKey,proto3" json:"requestKey,omitempty"`
}

func (x *SuggestExamQuestionRequest) Reset() {
	*x = SuggestExamQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestExamQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestExamQuestionRequest) ProtoMessage() {}

func (x *SuggestExamQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestExamQuestionRequest.ProtoReflect.Descriptor instead.
func (*SuggestExamQuestionRequest) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{3}
}

func (x *SuggestExamQuestionRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SuggestExamQuestionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SuggestExamQuestionRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SuggestExamQuestionRequest) GetSeniority() string {
	if x != nil {
		return x.Seniority
	}
	return ""
}

func (x *SuggestExamQuestionRequest) GetTopics() []*Topic {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *SuggestExamQuestionRequest) GetCreativity() int32 {
	if x != nil {
		return x.Creativity
	}
	return 0
}

func (x *SuggestExamQuestionRequest) GetContext() *SuggestExamQuestionRequest_Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *SuggestExamQuestionRequest) GetQuestionType() string {
	if x != nil {
		return x.QuestionType
	}
	return ""
}

func (x *SuggestExamQuestionRequest) GetRequestKey() string {
	if x != nil {
		return x.RequestKey
	}
	return ""
}

type SuggestExamQuestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Questions  []*Question `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
	RequestKey string      `protobuf:"bytes,2,opt,name=requestKey,proto3" json:"requestKey,omitempty"`
}

func (x *SuggestExamQuestionResponse) Reset() {
	*x = SuggestExamQuestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestExamQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestExamQuestionResponse) ProtoMessage() {}

func (x *SuggestExamQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestExamQuestionResponse.ProtoReflect.Descriptor instead.
func (*SuggestExamQuestionResponse) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{4}
}

func (x *SuggestExamQuestionResponse) GetQuestions() []*Question {
	if x != nil {
		return x.Questions
	}
	return nil
}

func (x *SuggestExamQuestionResponse) GetRequestKey() string {
	if x != nil {
		return x.RequestKey
	}
	return ""
}

type SuggestOutlinesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Difficulty  string   `protobuf:"bytes,3,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Tags        []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Outlines    []string `protobuf:"bytes,5,rep,name=outlines,proto3" json:"outlines,omitempty"` // Những gợi ý đã điền
}

func (x *SuggestOutlinesRequest) Reset() {
	*x = SuggestOutlinesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestOutlinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestOutlinesRequest) ProtoMessage() {}

func (x *SuggestOutlinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestOutlinesRequest.ProtoReflect.Descriptor instead.
func (*SuggestOutlinesRequest) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{5}
}

func (x *SuggestOutlinesRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SuggestOutlinesRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SuggestOutlinesRequest) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *SuggestOutlinesRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *SuggestOutlinesRequest) GetOutlines() []string {
	if x != nil {
		return x.Outlines
	}
	return nil
}

type SuggestOutlinesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Outlines []string `protobuf:"bytes,1,rep,name=outlines,proto3" json:"outlines,omitempty"` // Gợi ý từ LLM, khoảng 1 - 3 items
}

func (x *SuggestOutlinesResponse) Reset() {
	*x = SuggestOutlinesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestOutlinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestOutlinesResponse) ProtoMessage() {}

func (x *SuggestOutlinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestOutlinesResponse.ProtoReflect.Descriptor instead.
func (*SuggestOutlinesResponse) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{6}
}

func (x *SuggestOutlinesResponse) GetOutlines() []string {
	if x != nil {
		return x.Outlines
	}
	return nil
}

type SuggestInterviewQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context            *SuggestInterviewQuestionRequest_Context      `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Submissions        []*SuggestInterviewQuestionRequest_Submission `protobuf:"bytes,2,rep,name=submissions,proto3" json:"submissions,omitempty"`
	RemainingQuestions int32                                         `protobuf:"varint,3,opt,name=remainingQuestions,proto3" json:"remainingQuestions,omitempty"`
}

func (x *SuggestInterviewQuestionRequest) Reset() {
	*x = SuggestInterviewQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestInterviewQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestInterviewQuestionRequest) ProtoMessage() {}

func (x *SuggestInterviewQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestInterviewQuestionRequest.ProtoReflect.Descriptor instead.
func (*SuggestInterviewQuestionRequest) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{7}
}

func (x *SuggestInterviewQuestionRequest) GetContext() *SuggestInterviewQuestionRequest_Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *SuggestInterviewQuestionRequest) GetSubmissions() []*SuggestInterviewQuestionRequest_Submission {
	if x != nil {
		return x.Submissions
	}
	return nil
}

func (x *SuggestInterviewQuestionRequest) GetRemainingQuestions() int32 {
	if x != nil {
		return x.RemainingQuestions
	}
	return 0
}

type SuggestInterviewQuestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Questions []string `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *SuggestInterviewQuestionResponse) Reset() {
	*x = SuggestInterviewQuestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestInterviewQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestInterviewQuestionResponse) ProtoMessage() {}

func (x *SuggestInterviewQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestInterviewQuestionResponse.ProtoReflect.Descriptor instead.
func (*SuggestInterviewQuestionResponse) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{8}
}

func (x *SuggestInterviewQuestionResponse) GetQuestions() []string {
	if x != nil {
		return x.Questions
	}
	return nil
}

type GeneralInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title                string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description          string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Duration             string `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Difficulty           string `protobuf:"bytes,4,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	MaxNumberOfQuestions int32  `protobuf:"varint,5,opt,name=maxNumberOfQuestions,proto3" json:"maxNumberOfQuestions,omitempty"`
}

func (x *GeneralInfo) Reset() {
	*x = GeneralInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralInfo) ProtoMessage() {}

func (x *GeneralInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralInfo.ProtoReflect.Descriptor instead.
func (*GeneralInfo) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{9}
}

func (x *GeneralInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GeneralInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GeneralInfo) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *GeneralInfo) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *GeneralInfo) GetMaxNumberOfQuestions() int32 {
	if x != nil {
		return x.MaxNumberOfQuestions
	}
	return 0
}

type CriteriaEleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Criteria     string `protobuf:"bytes,1,opt,name=criteria,proto3" json:"criteria,omitempty"`
	ChosenOption string `protobuf:"bytes,2,opt,name=chosenOption,proto3" json:"chosenOption,omitempty"`
}

func (x *CriteriaEleRequest) Reset() {
	*x = CriteriaEleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CriteriaEleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CriteriaEleRequest) ProtoMessage() {}

func (x *CriteriaEleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CriteriaEleRequest.ProtoReflect.Descriptor instead.
func (*CriteriaEleRequest) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{10}
}

func (x *CriteriaEleRequest) GetCriteria() string {
	if x != nil {
		return x.Criteria
	}
	return ""
}

func (x *CriteriaEleRequest) GetChosenOption() string {
	if x != nil {
		return x.ChosenOption
	}
	return ""
}

type SuggestCriteriaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeneralInfo  *GeneralInfo          `protobuf:"bytes,1,opt,name=generalInfo,proto3" json:"generalInfo,omitempty"`
	CriteriaList []*CriteriaEleRequest `protobuf:"bytes,2,rep,name=criteriaList,proto3" json:"criteriaList,omitempty"`
}

func (x *SuggestCriteriaRequest) Reset() {
	*x = SuggestCriteriaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestCriteriaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestCriteriaRequest) ProtoMessage() {}

func (x *SuggestCriteriaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestCriteriaRequest.ProtoReflect.Descriptor instead.
func (*SuggestCriteriaRequest) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{11}
}

func (x *SuggestCriteriaRequest) GetGeneralInfo() *GeneralInfo {
	if x != nil {
		return x.GeneralInfo
	}
	return nil
}

func (x *SuggestCriteriaRequest) GetCriteriaList() []*CriteriaEleRequest {
	if x != nil {
		return x.CriteriaList
	}
	return nil
}

type CriteriaEleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Criteria   string   `protobuf:"bytes,1,opt,name=criteria,proto3" json:"criteria,omitempty"`
	OptionList []string `protobuf:"bytes,2,rep,name=optionList,proto3" json:"optionList,omitempty"`
}

func (x *CriteriaEleResponse) Reset() {
	*x = CriteriaEleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CriteriaEleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CriteriaEleResponse) ProtoMessage() {}

func (x *CriteriaEleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CriteriaEleResponse.ProtoReflect.Descriptor instead.
func (*CriteriaEleResponse) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{12}
}

func (x *CriteriaEleResponse) GetCriteria() string {
	if x != nil {
		return x.Criteria
	}
	return ""
}

func (x *CriteriaEleResponse) GetOptionList() []string {
	if x != nil {
		return x.OptionList
	}
	return nil
}

type SuggestCriteriaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CriteriaList []*CriteriaEleResponse `protobuf:"bytes,1,rep,name=criteriaList,proto3" json:"criteriaList,omitempty"`
}

func (x *SuggestCriteriaResponse) Reset() {
	*x = SuggestCriteriaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestCriteriaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestCriteriaResponse) ProtoMessage() {}

func (x *SuggestCriteriaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestCriteriaResponse.ProtoReflect.Descriptor instead.
func (*SuggestCriteriaResponse) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{13}
}

func (x *SuggestCriteriaResponse) GetCriteriaList() []*CriteriaEleResponse {
	if x != nil {
		return x.CriteriaList
	}
	return nil
}

type SuggestOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeneralInfo  *GeneralInfo          `protobuf:"bytes,1,opt,name=generalInfo,proto3" json:"generalInfo,omitempty"`
	CriteriaList []*CriteriaEleRequest `protobuf:"bytes,2,rep,name=criteriaList,proto3" json:"criteriaList,omitempty"`
	NewCriteria  string                `protobuf:"bytes,3,opt,name=newCriteria,proto3" json:"newCriteria,omitempty"`
}

func (x *SuggestOptionsRequest) Reset() {
	*x = SuggestOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestOptionsRequest) ProtoMessage() {}

func (x *SuggestOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestOptionsRequest.ProtoReflect.Descriptor instead.
func (*SuggestOptionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{14}
}

func (x *SuggestOptionsRequest) GetGeneralInfo() *GeneralInfo {
	if x != nil {
		return x.GeneralInfo
	}
	return nil
}

func (x *SuggestOptionsRequest) GetCriteriaList() []*CriteriaEleRequest {
	if x != nil {
		return x.CriteriaList
	}
	return nil
}

func (x *SuggestOptionsRequest) GetNewCriteria() string {
	if x != nil {
		return x.NewCriteria
	}
	return ""
}

type SuggestOptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CriteriaList *CriteriaEleResponse `protobuf:"bytes,1,opt,name=criteriaList,proto3" json:"criteriaList,omitempty"`
}

func (x *SuggestOptionsResponse) Reset() {
	*x = SuggestOptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestOptionsResponse) ProtoMessage() {}

func (x *SuggestOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestOptionsResponse.ProtoReflect.Descriptor instead.
func (*SuggestOptionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{15}
}

func (x *SuggestOptionsResponse) GetCriteriaList() *CriteriaEleResponse {
	if x != nil {
		return x.CriteriaList
	}
	return nil
}

type AnswerOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptionContent string `protobuf:"bytes,1,opt,name=optionContent,proto3" json:"optionContent,omitempty"`
	IsCorrect     bool   `protobuf:"varint,2,opt,name=isCorrect,proto3" json:"isCorrect,omitempty"`
}

func (x *AnswerOption) Reset() {
	*x = AnswerOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerOption) ProtoMessage() {}

func (x *AnswerOption) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerOption.ProtoReflect.Descriptor instead.
func (*AnswerOption) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{16}
}

func (x *AnswerOption) GetOptionContent() string {
	if x != nil {
		return x.OptionContent
	}
	return ""
}

func (x *AnswerOption) GetIsCorrect() bool {
	if x != nil {
		return x.IsCorrect
	}
	return false
}

type Question struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text          string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Options       []string `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
	Points        int32    `protobuf:"varint,3,opt,name=points,proto3" json:"points,omitempty"`
	CorrectOption int32    `protobuf:"varint,4,opt,name=correctOption,proto3" json:"correctOption,omitempty"`
}

func (x *Question) Reset() {
	*x = Question{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Question) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Question) ProtoMessage() {}

func (x *Question) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Question.ProtoReflect.Descriptor instead.
func (*Question) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{17}
}

func (x *Question) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Question) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Question) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *Question) GetCorrectOption() int32 {
	if x != nil {
		return x.CorrectOption
	}
	return 0
}

type SuggestQuestionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Questions  []*Question `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
	RequestKey string      `protobuf:"bytes,2,opt,name=requestKey,proto3" json:"requestKey,omitempty"`
}

func (x *SuggestQuestionsResponse) Reset() {
	*x = SuggestQuestionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestQuestionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestQuestionsResponse) ProtoMessage() {}

func (x *SuggestQuestionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestQuestionsResponse.ProtoReflect.Descriptor instead.
func (*SuggestQuestionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{18}
}

func (x *SuggestQuestionsResponse) GetQuestions() []*Question {
	if x != nil {
		return x.Questions
	}
	return nil
}

func (x *SuggestQuestionsResponse) GetRequestKey() string {
	if x != nil {
		return x.RequestKey
	}
	return ""
}

type SuggestQuestionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title             string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description       string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	MinutesToAnswer   int32    `protobuf:"varint,3,opt,name=minutesToAnswer,proto3" json:"minutesToAnswer,omitempty"`
	Language          string   `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	Difficulty        string   `protobuf:"bytes,5,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Tags              []string `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	Outlines          []string `protobuf:"bytes,7,rep,name=outlines,proto3" json:"outlines,omitempty"`
	NumberOfQuestions int32    `protobuf:"varint,8,opt,name=numberOfQuestions,proto3" json:"numberOfQuestions,omitempty"`
	NumberOfOptions   int32    `protobuf:"varint,9,opt,name=numberOfOptions,proto3" json:"numberOfOptions,omitempty"`
	QuestionType      string   `protobuf:"bytes,10,opt,name=questionType,proto3" json:"questionType,omitempty"`
	RequestKey        string   `protobuf:"bytes,11,opt,name=requestKey,proto3" json:"requestKey,omitempty"`
}

func (x *SuggestQuestionsRequest) Reset() {
	*x = SuggestQuestionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestQuestionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestQuestionsRequest) ProtoMessage() {}

func (x *SuggestQuestionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestQuestionsRequest.ProtoReflect.Descriptor instead.
func (*SuggestQuestionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{19}
}

func (x *SuggestQuestionsRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SuggestQuestionsRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SuggestQuestionsRequest) GetMinutesToAnswer() int32 {
	if x != nil {
		return x.MinutesToAnswer
	}
	return 0
}

func (x *SuggestQuestionsRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SuggestQuestionsRequest) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *SuggestQuestionsRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *SuggestQuestionsRequest) GetOutlines() []string {
	if x != nil {
		return x.Outlines
	}
	return nil
}

func (x *SuggestQuestionsRequest) GetNumberOfQuestions() int32 {
	if x != nil {
		return x.NumberOfQuestions
	}
	return 0
}

func (x *SuggestQuestionsRequest) GetNumberOfOptions() int32 {
	if x != nil {
		return x.NumberOfOptions
	}
	return 0
}

func (x *SuggestQuestionsRequest) GetQuestionType() string {
	if x != nil {
		return x.QuestionType
	}
	return ""
}

func (x *SuggestQuestionsRequest) GetRequestKey() string {
	if x != nil {
		return x.RequestKey
	}
	return ""
}

type ScoreInterviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Submissions []*ScoreInterviewRequest_Submission `protobuf:"bytes,1,rep,name=submissions,proto3" json:"submissions,omitempty"`
	Skills      []string                            `protobuf:"bytes,2,rep,name=skills,proto3" json:"skills,omitempty"`
}

func (x *ScoreInterviewRequest) Reset() {
	*x = ScoreInterviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreInterviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreInterviewRequest) ProtoMessage() {}

func (x *ScoreInterviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreInterviewRequest.ProtoReflect.Descriptor instead.
func (*ScoreInterviewRequest) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{20}
}

func (x *ScoreInterviewRequest) GetSubmissions() []*ScoreInterviewRequest_Submission {
	if x != nil {
		return x.Submissions
	}
	return nil
}

func (x *ScoreInterviewRequest) GetSkills() []string {
	if x != nil {
		return x.Skills
	}
	return nil
}

type ScoreInterviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result             []*ScoreInterviewResponse_Submission `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	Skills             []*ScoreInterviewResponse_SkillScore `protobuf:"bytes,2,rep,name=skills,proto3" json:"skills,omitempty"`
	TotalScore         map[string]int32                     `protobuf:"bytes,3,rep,name=totalScore,proto3" json:"totalScore,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	PositiveFeedback   string                               `protobuf:"bytes,4,opt,name=positiveFeedback,proto3" json:"positiveFeedback,omitempty"`
	ActionableFeedback string                               `protobuf:"bytes,5,opt,name=actionableFeedback,proto3" json:"actionableFeedback,omitempty"`
	FinalComment       string                               `protobuf:"bytes,6,opt,name=finalComment,proto3" json:"finalComment,omitempty"`
}

func (x *ScoreInterviewResponse) Reset() {
	*x = ScoreInterviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreInterviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreInterviewResponse) ProtoMessage() {}

func (x *ScoreInterviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreInterviewResponse.ProtoReflect.Descriptor instead.
func (*ScoreInterviewResponse) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{21}
}

func (x *ScoreInterviewResponse) GetResult() []*ScoreInterviewResponse_Submission {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ScoreInterviewResponse) GetSkills() []*ScoreInterviewResponse_SkillScore {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *ScoreInterviewResponse) GetTotalScore() map[string]int32 {
	if x != nil {
		return x.TotalScore
	}
	return nil
}

func (x *ScoreInterviewResponse) GetPositiveFeedback() string {
	if x != nil {
		return x.PositiveFeedback
	}
	return ""
}

func (x *ScoreInterviewResponse) GetActionableFeedback() string {
	if x != nil {
		return x.ActionableFeedback
	}
	return ""
}

func (x *ScoreInterviewResponse) GetFinalComment() string {
	if x != nil {
		return x.FinalComment
	}
	return ""
}

type SuggestExamQuestionResponseV2_Quetion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32                                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`         // Unique identifier for the question
	TestId string                                `protobuf:"bytes,2,opt,name=testId,proto3" json:"testId,omitempty"`  // Identifier for the test this question belongs to
	Text   string                                `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`      // The question text
	Points int32                                 `protobuf:"varint,4,opt,name=points,proto3" json:"points,omitempty"` // Points assigned to the question
	Type   string                                `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`      // Type of question: "MCQ" for multiple choice, "LONG_ANSWER" for long answer
	Detail *SuggestExamQuestionResponseV2_Detail `protobuf:"bytes,6,opt,name=detail,proto3" json:"detail,omitempty"`  // Detailed information about the question
}

func (x *SuggestExamQuestionResponseV2_Quetion) Reset() {
	*x = SuggestExamQuestionResponseV2_Quetion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestExamQuestionResponseV2_Quetion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestExamQuestionResponseV2_Quetion) ProtoMessage() {}

func (x *SuggestExamQuestionResponseV2_Quetion) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestExamQuestionResponseV2_Quetion.ProtoReflect.Descriptor instead.
func (*SuggestExamQuestionResponseV2_Quetion) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{0, 0}
}

func (x *SuggestExamQuestionResponseV2_Quetion) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SuggestExamQuestionResponseV2_Quetion) GetTestId() string {
	if x != nil {
		return x.TestId
	}
	return ""
}

func (x *SuggestExamQuestionResponseV2_Quetion) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SuggestExamQuestionResponseV2_Quetion) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *SuggestExamQuestionResponseV2_Quetion) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SuggestExamQuestionResponseV2_Quetion) GetDetail() *SuggestExamQuestionResponseV2_Detail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type SuggestExamQuestionResponseV2_Detail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`                    // Type of question, e.g., "MCQ"
	Options       []string `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`              // List of options for the MCQ
	CorrectOption int32    `protobuf:"varint,3,opt,name=correctOption,proto3" json:"correctOption,omitempty"` // Index of the correct option, null if not applicable
	ImageLinks    []string `protobuf:"bytes,4,rep,name=imageLinks,proto3" json:"imageLinks,omitempty"`        // Optional links to images related to the question
	ExtraText     string   `protobuf:"bytes,5,opt,name=extraText,proto3" json:"extraText,omitempty"`          // Optional additional text for context
	CorrectAnswer string   `protobuf:"bytes,6,opt,name=correctAnswer,proto3" json:"correctAnswer,omitempty"`  // The correct answer for long answer questions
}

func (x *SuggestExamQuestionResponseV2_Detail) Reset() {
	*x = SuggestExamQuestionResponseV2_Detail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestExamQuestionResponseV2_Detail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestExamQuestionResponseV2_Detail) ProtoMessage() {}

func (x *SuggestExamQuestionResponseV2_Detail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestExamQuestionResponseV2_Detail.ProtoReflect.Descriptor instead.
func (*SuggestExamQuestionResponseV2_Detail) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{0, 1}
}

func (x *SuggestExamQuestionResponseV2_Detail) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SuggestExamQuestionResponseV2_Detail) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *SuggestExamQuestionResponseV2_Detail) GetCorrectOption() int32 {
	if x != nil {
		return x.CorrectOption
	}
	return 0
}

func (x *SuggestExamQuestionResponseV2_Detail) GetImageLinks() []string {
	if x != nil {
		return x.ImageLinks
	}
	return nil
}

func (x *SuggestExamQuestionResponseV2_Detail) GetExtraText() string {
	if x != nil {
		return x.ExtraText
	}
	return ""
}

func (x *SuggestExamQuestionResponseV2_Detail) GetCorrectAnswer() string {
	if x != nil {
		return x.CorrectAnswer
	}
	return ""
}

type SuggestExamQuestionResponseV2_McqDetailCommonSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`                    // Type of question, e.g., "MCQ"
	Options       []string `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`              // List of options for the MCQ
	CorrectOption int32    `protobuf:"varint,3,opt,name=correctOption,proto3" json:"correctOption,omitempty"` // Index of the correct option, null if not applicable
}

func (x *SuggestExamQuestionResponseV2_McqDetailCommonSchema) Reset() {
	*x = SuggestExamQuestionResponseV2_McqDetailCommonSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestExamQuestionResponseV2_McqDetailCommonSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestExamQuestionResponseV2_McqDetailCommonSchema) ProtoMessage() {}

func (x *SuggestExamQuestionResponseV2_McqDetailCommonSchema) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestExamQuestionResponseV2_McqDetailCommonSchema.ProtoReflect.Descriptor instead.
func (*SuggestExamQuestionResponseV2_McqDetailCommonSchema) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{0, 2}
}

func (x *SuggestExamQuestionResponseV2_McqDetailCommonSchema) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SuggestExamQuestionResponseV2_McqDetailCommonSchema) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *SuggestExamQuestionResponseV2_McqDetailCommonSchema) GetCorrectOption() int32 {
	if x != nil {
		return x.CorrectOption
	}
	return 0
}

type SuggestExamQuestionResponseV2_LongAnswerDetailCommonSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`                   // Type of question, e.g., "LONG_ANSWER"
	ImageLinks    []string `protobuf:"bytes,2,rep,name=imageLinks,proto3" json:"imageLinks,omitempty"`       // Optional links to images related to the question
	ExtraText     string   `protobuf:"bytes,3,opt,name=extraText,proto3" json:"extraText,omitempty"`         // Optional additional text for context
	CorrectAnswer string   `protobuf:"bytes,4,opt,name=correctAnswer,proto3" json:"correctAnswer,omitempty"` // The correct answer for long answer questions
}

func (x *SuggestExamQuestionResponseV2_LongAnswerDetailCommonSchema) Reset() {
	*x = SuggestExamQuestionResponseV2_LongAnswerDetailCommonSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestExamQuestionResponseV2_LongAnswerDetailCommonSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestExamQuestionResponseV2_LongAnswerDetailCommonSchema) ProtoMessage() {}

func (x *SuggestExamQuestionResponseV2_LongAnswerDetailCommonSchema) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestExamQuestionResponseV2_LongAnswerDetailCommonSchema.ProtoReflect.Descriptor instead.
func (*SuggestExamQuestionResponseV2_LongAnswerDetailCommonSchema) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{0, 3}
}

func (x *SuggestExamQuestionResponseV2_LongAnswerDetailCommonSchema) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SuggestExamQuestionResponseV2_LongAnswerDetailCommonSchema) GetImageLinks() []string {
	if x != nil {
		return x.ImageLinks
	}
	return nil
}

func (x *SuggestExamQuestionResponseV2_LongAnswerDetailCommonSchema) GetExtraText() string {
	if x != nil {
		return x.ExtraText
	}
	return ""
}

func (x *SuggestExamQuestionResponseV2_LongAnswerDetailCommonSchema) GetCorrectAnswer() string {
	if x != nil {
		return x.CorrectAnswer
	}
	return ""
}

type SuggestExamQuestionRequest_Context struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text  string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Links []string `protobuf:"bytes,2,rep,name=links,proto3" json:"links,omitempty"` // External links
}

func (x *SuggestExamQuestionRequest_Context) Reset() {
	*x = SuggestExamQuestionRequest_Context{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestExamQuestionRequest_Context) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestExamQuestionRequest_Context) ProtoMessage() {}

func (x *SuggestExamQuestionRequest_Context) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestExamQuestionRequest_Context.ProtoReflect.Descriptor instead.
func (*SuggestExamQuestionRequest_Context) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{3, 0}
}

func (x *SuggestExamQuestionRequest_Context) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SuggestExamQuestionRequest_Context) GetLinks() []string {
	if x != nil {
		return x.Links
	}
	return nil
}

type SuggestInterviewQuestionRequest_Context struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position     string   `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Experience   string   `protobuf:"bytes,2,opt,name=experience,proto3" json:"experience,omitempty"`
	Language     string   `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
	Models       string   `protobuf:"bytes,4,opt,name=models,proto3" json:"models,omitempty"`
	Speed        int32    `protobuf:"varint,5,opt,name=speed,proto3" json:"speed,omitempty"`
	Skills       []string `protobuf:"bytes,6,rep,name=skills,proto3" json:"skills,omitempty"`
	MaxQuestions int32    `protobuf:"varint,7,opt,name=maxQuestions,proto3" json:"maxQuestions,omitempty"`
	SkipIntro    bool     `protobuf:"varint,8,opt,name=skipIntro,proto3" json:"skipIntro,omitempty"`
	SkipCode     bool     `protobuf:"varint,9,opt,name=skipCode,proto3" json:"skipCode,omitempty"`
	InterviewId  string   `protobuf:"bytes,10,opt,name=interviewId,proto3" json:"interviewId,omitempty"`
}

func (x *SuggestInterviewQuestionRequest_Context) Reset() {
	*x = SuggestInterviewQuestionRequest_Context{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestInterviewQuestionRequest_Context) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestInterviewQuestionRequest_Context) ProtoMessage() {}

func (x *SuggestInterviewQuestionRequest_Context) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestInterviewQuestionRequest_Context.ProtoReflect.Descriptor instead.
func (*SuggestInterviewQuestionRequest_Context) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{7, 0}
}

func (x *SuggestInterviewQuestionRequest_Context) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *SuggestInterviewQuestionRequest_Context) GetExperience() string {
	if x != nil {
		return x.Experience
	}
	return ""
}

func (x *SuggestInterviewQuestionRequest_Context) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SuggestInterviewQuestionRequest_Context) GetModels() string {
	if x != nil {
		return x.Models
	}
	return ""
}

func (x *SuggestInterviewQuestionRequest_Context) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *SuggestInterviewQuestionRequest_Context) GetSkills() []string {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *SuggestInterviewQuestionRequest_Context) GetMaxQuestions() int32 {
	if x != nil {
		return x.MaxQuestions
	}
	return 0
}

func (x *SuggestInterviewQuestionRequest_Context) GetSkipIntro() bool {
	if x != nil {
		return x.SkipIntro
	}
	return false
}

func (x *SuggestInterviewQuestionRequest_Context) GetSkipCode() bool {
	if x != nil {
		return x.SkipCode
	}
	return false
}

func (x *SuggestInterviewQuestionRequest_Context) GetInterviewId() string {
	if x != nil {
		return x.InterviewId
	}
	return ""
}

type SuggestInterviewQuestionRequest_Submission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question string `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	Answer   string `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *SuggestInterviewQuestionRequest_Submission) Reset() {
	*x = SuggestInterviewQuestionRequest_Submission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestInterviewQuestionRequest_Submission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestInterviewQuestionRequest_Submission) ProtoMessage() {}

func (x *SuggestInterviewQuestionRequest_Submission) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestInterviewQuestionRequest_Submission.ProtoReflect.Descriptor instead.
func (*SuggestInterviewQuestionRequest_Submission) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{7, 1}
}

func (x *SuggestInterviewQuestionRequest_Submission) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *SuggestInterviewQuestionRequest_Submission) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

type ScoreInterviewRequest_Submission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index    int32  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Question string `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	Answer   string `protobuf:"bytes,3,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *ScoreInterviewRequest_Submission) Reset() {
	*x = ScoreInterviewRequest_Submission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreInterviewRequest_Submission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreInterviewRequest_Submission) ProtoMessage() {}

func (x *ScoreInterviewRequest_Submission) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreInterviewRequest_Submission.ProtoReflect.Descriptor instead.
func (*ScoreInterviewRequest_Submission) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{20, 0}
}

func (x *ScoreInterviewRequest_Submission) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ScoreInterviewRequest_Submission) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *ScoreInterviewRequest_Submission) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

type ScoreInterviewResponse_Submission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index   int32  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	Score   string `protobuf:"bytes,3,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *ScoreInterviewResponse_Submission) Reset() {
	*x = ScoreInterviewResponse_Submission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreInterviewResponse_Submission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreInterviewResponse_Submission) ProtoMessage() {}

func (x *ScoreInterviewResponse_Submission) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreInterviewResponse_Submission.ProtoReflect.Descriptor instead.
func (*ScoreInterviewResponse_Submission) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{21, 0}
}

func (x *ScoreInterviewResponse_Submission) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ScoreInterviewResponse_Submission) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ScoreInterviewResponse_Submission) GetScore() string {
	if x != nil {
		return x.Score
	}
	return ""
}

type ScoreInterviewResponse_SkillScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Skill string `protobuf:"bytes,1,opt,name=skill,proto3" json:"skill,omitempty"`
	Score string `protobuf:"bytes,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *ScoreInterviewResponse_SkillScore) Reset() {
	*x = ScoreInterviewResponse_SkillScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreInterviewResponse_SkillScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreInterviewResponse_SkillScore) ProtoMessage() {}

func (x *ScoreInterviewResponse_SkillScore) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreInterviewResponse_SkillScore.ProtoReflect.Descriptor instead.
func (*ScoreInterviewResponse_SkillScore) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{21, 1}
}

func (x *ScoreInterviewResponse_SkillScore) GetSkill() string {
	if x != nil {
		return x.Skill
	}
	return ""
}

func (x *ScoreInterviewResponse_SkillScore) GetScore() string {
	if x != nil {
		return x.Score
	}
	return ""
}

var File_proto_suggest_suggest_proto protoreflect.FileDescriptor

var file_proto_suggest_suggest_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2f,
	0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x91, 0x06, 0x0a, 0x1d, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56,
	0x32, 0x12, 0x4c, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x2e, 0x51, 0x75, 0x65,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x1a,
	0xb8, 0x01, 0x0a, 0x07, 0x51, 0x75, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x2e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x1a, 0xc0, 0x01, 0x0a, 0x06, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72,
	0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x54, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x54, 0x65, 0x78, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65,
	0x63, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x1a, 0x6b, 0x0a,
	0x15, 0x4d, 0x63, 0x71, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x72,
	0x72, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x96, 0x01, 0x0a, 0x1c, 0x4c,
	0x6f, 0x6e, 0x67, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x54, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x54, 0x65, 0x78, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x22, 0xa4, 0x01, 0x0a, 0x16, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c,
	0x74, 0x79, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x69, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x69, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x4c, 0x65, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x4c, 0x65,
	0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x65, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x45, 0x78, 0x70, 0x65, 0x72, 0x74, 0x22, 0x74, 0x0a, 0x05, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x57, 0x0a, 0x16, 0x64, 0x69, 0x66, 0x66, 0x69,
	0x63, 0x75, 0x6c, 0x74, 0x79, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x16, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63,
	0x75, 0x6c, 0x74, 0x79, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x96, 0x03, 0x0a, 0x1a, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x45, 0x78, 0x61, 0x6d,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x26, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x45, 0x78, 0x61, 0x6d,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4b,
	0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4b, 0x65, 0x79, 0x1a, 0x33, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x6e, 0x0a, 0x1b, 0x53, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x22, 0xa0, 0x01, 0x0a, 0x16, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x17,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x6c, 0x69,
	0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x6c, 0x69,
	0x6e, 0x65, 0x73, 0x22, 0xe0, 0x04, 0x0a, 0x1f, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x69, 0x65, 0x77, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x55, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x69, 0x65, 0x77, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xa7, 0x02, 0x0a, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6b, 0x69, 0x70,
	0x49, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x6b, 0x69,
	0x70, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x6b, 0x69, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x49,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69,
	0x65, 0x77, 0x49, 0x64, 0x1a, 0x40, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x40, 0x0a, 0x20, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x14,
	0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6d, 0x61, 0x78, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x54, 0x0a, 0x12, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x45, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x91, 0x01, 0x0a, 0x16, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x36, 0x0a, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0c, 0x63, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x45, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x63, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x51, 0x0a, 0x13, 0x43, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x45, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x1e, 0x0a,
	0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x5b, 0x0a,
	0x17, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x63, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x45, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x63, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb2, 0x01, 0x0a, 0x15, 0x53,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0c,
	0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x45, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0c, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x6e, 0x65, 0x77, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x22,
	0x5a, 0x0a, 0x16, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x63, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x45, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x63,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x52, 0x0a, 0x0c, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x22,
	0x76, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6b, 0x0a, 0x18, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4b, 0x65, 0x79, 0x22, 0x83, 0x03, 0x0a, 0x17, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x75,
	0x74, 0x65, 0x73, 0x54, 0x6f, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x54, 0x6f, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x2c,
	0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x4f, 0x66, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x0a, 0x0f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x22, 0xd4, 0x01, 0x0a, 0x15, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x1a, 0x56, 0x0a, 0x0a, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a,
	0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x22, 0xbe, 0x04, 0x0a, 0x16, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x42, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x06, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x73, 0x12, 0x4f, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x12, 0x2e, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x52, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x1a, 0x38, 0x0a, 0x0a, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x1a, 0x3d, 0x0a, 0x0f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x32, 0x8e, 0x07, 0x0a, 0x0e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x0f, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x1f, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x71, 0x0a, 0x0e,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e,
	0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x7e, 0x0a, 0x10, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x20, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x22, 0x20, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x9a, 0x01, 0x0a, 0x18, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x73,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65,
	0x77, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x69, 0x65, 0x77, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x71, 0x0a, 0x0e,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x1e,
	0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12,
	0x75, 0x0a, 0x0f, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x6c, 0x69, 0x6e,
	0x65, 0x73, 0x12, 0x1f, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a,
	0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x75,
	0x74, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x8a, 0x01, 0x0a, 0x15, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x32,
	0x12, 0x23, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x22, 0x24, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x17, 0x5a, 0x15, 0x6d, 0x79, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_suggest_suggest_proto_rawDescOnce sync.Once
	file_proto_suggest_suggest_proto_rawDescData = file_proto_suggest_suggest_proto_rawDesc
)

func file_proto_suggest_suggest_proto_rawDescGZIP() []byte {
	file_proto_suggest_suggest_proto_rawDescOnce.Do(func() {
		file_proto_suggest_suggest_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_suggest_suggest_proto_rawDescData)
	})
	return file_proto_suggest_suggest_proto_rawDescData
}

var file_proto_suggest_suggest_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_proto_suggest_suggest_proto_goTypes = []interface{}{
	(*SuggestExamQuestionResponseV2)(nil),                              // 0: suggest.SuggestExamQuestionResponseV2
	(*DifficultyDistribution)(nil),                                     // 1: suggest.DifficultyDistribution
	(*Topic)(nil),                                                      // 2: suggest.Topic
	(*SuggestExamQuestionRequest)(nil),                                 // 3: suggest.SuggestExamQuestionRequest
	(*SuggestExamQuestionResponse)(nil),                                // 4: suggest.SuggestExamQuestionResponse
	(*SuggestOutlinesRequest)(nil),                                     // 5: suggest.SuggestOutlinesRequest
	(*SuggestOutlinesResponse)(nil),                                    // 6: suggest.SuggestOutlinesResponse
	(*SuggestInterviewQuestionRequest)(nil),                            // 7: suggest.SuggestInterviewQuestionRequest
	(*SuggestInterviewQuestionResponse)(nil),                           // 8: suggest.SuggestInterviewQuestionResponse
	(*GeneralInfo)(nil),                                                // 9: suggest.GeneralInfo
	(*CriteriaEleRequest)(nil),                                         // 10: suggest.CriteriaEleRequest
	(*SuggestCriteriaRequest)(nil),                                     // 11: suggest.SuggestCriteriaRequest
	(*CriteriaEleResponse)(nil),                                        // 12: suggest.CriteriaEleResponse
	(*SuggestCriteriaResponse)(nil),                                    // 13: suggest.SuggestCriteriaResponse
	(*SuggestOptionsRequest)(nil),                                      // 14: suggest.SuggestOptionsRequest
	(*SuggestOptionsResponse)(nil),                                     // 15: suggest.SuggestOptionsResponse
	(*AnswerOption)(nil),                                               // 16: suggest.AnswerOption
	(*Question)(nil),                                                   // 17: suggest.Question
	(*SuggestQuestionsResponse)(nil),                                   // 18: suggest.SuggestQuestionsResponse
	(*SuggestQuestionsRequest)(nil),                                    // 19: suggest.SuggestQuestionsRequest
	(*ScoreInterviewRequest)(nil),                                      // 20: suggest.ScoreInterviewRequest
	(*ScoreInterviewResponse)(nil),                                     // 21: suggest.ScoreInterviewResponse
	(*SuggestExamQuestionResponseV2_Quetion)(nil),                      // 22: suggest.SuggestExamQuestionResponseV2.Quetion
	(*SuggestExamQuestionResponseV2_Detail)(nil),                       // 23: suggest.SuggestExamQuestionResponseV2.Detail
	(*SuggestExamQuestionResponseV2_McqDetailCommonSchema)(nil),        // 24: suggest.SuggestExamQuestionResponseV2.McqDetailCommonSchema
	(*SuggestExamQuestionResponseV2_LongAnswerDetailCommonSchema)(nil), // 25: suggest.SuggestExamQuestionResponseV2.LongAnswerDetailCommonSchema
	(*SuggestExamQuestionRequest_Context)(nil),                         // 26: suggest.SuggestExamQuestionRequest.Context
	(*SuggestInterviewQuestionRequest_Context)(nil),                    // 27: suggest.SuggestInterviewQuestionRequest.Context
	(*SuggestInterviewQuestionRequest_Submission)(nil),                 // 28: suggest.SuggestInterviewQuestionRequest.Submission
	(*ScoreInterviewRequest_Submission)(nil),                           // 29: suggest.ScoreInterviewRequest.Submission
	(*ScoreInterviewResponse_Submission)(nil),                          // 30: suggest.ScoreInterviewResponse.Submission
	(*ScoreInterviewResponse_SkillScore)(nil),                          // 31: suggest.ScoreInterviewResponse.SkillScore
	nil, // 32: suggest.ScoreInterviewResponse.TotalScoreEntry
}
var file_proto_suggest_suggest_proto_depIdxs = []int32{
	22, // 0: suggest.SuggestExamQuestionResponseV2.questions:type_name -> suggest.SuggestExamQuestionResponseV2.Quetion
	1,  // 1: suggest.Topic.difficultyDistribution:type_name -> suggest.DifficultyDistribution
	2,  // 2: suggest.SuggestExamQuestionRequest.topics:type_name -> suggest.Topic
	26, // 3: suggest.SuggestExamQuestionRequest.context:type_name -> suggest.SuggestExamQuestionRequest.Context
	17, // 4: suggest.SuggestExamQuestionResponse.questions:type_name -> suggest.Question
	27, // 5: suggest.SuggestInterviewQuestionRequest.context:type_name -> suggest.SuggestInterviewQuestionRequest.Context
	28, // 6: suggest.SuggestInterviewQuestionRequest.submissions:type_name -> suggest.SuggestInterviewQuestionRequest.Submission
	9,  // 7: suggest.SuggestCriteriaRequest.generalInfo:type_name -> suggest.GeneralInfo
	10, // 8: suggest.SuggestCriteriaRequest.criteriaList:type_name -> suggest.CriteriaEleRequest
	12, // 9: suggest.SuggestCriteriaResponse.criteriaList:type_name -> suggest.CriteriaEleResponse
	9,  // 10: suggest.SuggestOptionsRequest.generalInfo:type_name -> suggest.GeneralInfo
	10, // 11: suggest.SuggestOptionsRequest.criteriaList:type_name -> suggest.CriteriaEleRequest
	12, // 12: suggest.SuggestOptionsResponse.criteriaList:type_name -> suggest.CriteriaEleResponse
	17, // 13: suggest.SuggestQuestionsResponse.questions:type_name -> suggest.Question
	29, // 14: suggest.ScoreInterviewRequest.submissions:type_name -> suggest.ScoreInterviewRequest.Submission
	30, // 15: suggest.ScoreInterviewResponse.result:type_name -> suggest.ScoreInterviewResponse.Submission
	31, // 16: suggest.ScoreInterviewResponse.skills:type_name -> suggest.ScoreInterviewResponse.SkillScore
	32, // 17: suggest.ScoreInterviewResponse.totalScore:type_name -> suggest.ScoreInterviewResponse.TotalScoreEntry
	23, // 18: suggest.SuggestExamQuestionResponseV2.Quetion.detail:type_name -> suggest.SuggestExamQuestionResponseV2.Detail
	11, // 19: suggest.SuggestService.SuggestCriteria:input_type -> suggest.SuggestCriteriaRequest
	14, // 20: suggest.SuggestService.SuggestOptions:input_type -> suggest.SuggestOptionsRequest
	19, // 21: suggest.SuggestService.SuggestQuestions:input_type -> suggest.SuggestQuestionsRequest
	7,  // 22: suggest.SuggestService.SuggestInterviewQuestion:input_type -> suggest.SuggestInterviewQuestionRequest
	20, // 23: suggest.SuggestService.ScoreInterview:input_type -> suggest.ScoreInterviewRequest
	5,  // 24: suggest.SuggestService.SuggestOutlines:input_type -> suggest.SuggestOutlinesRequest
	3,  // 25: suggest.SuggestService.SuggestExamQuestionV2:input_type -> suggest.SuggestExamQuestionRequest
	13, // 26: suggest.SuggestService.SuggestCriteria:output_type -> suggest.SuggestCriteriaResponse
	15, // 27: suggest.SuggestService.SuggestOptions:output_type -> suggest.SuggestOptionsResponse
	0,  // 28: suggest.SuggestService.SuggestQuestions:output_type -> suggest.SuggestExamQuestionResponseV2
	8,  // 29: suggest.SuggestService.SuggestInterviewQuestion:output_type -> suggest.SuggestInterviewQuestionResponse
	21, // 30: suggest.SuggestService.ScoreInterview:output_type -> suggest.ScoreInterviewResponse
	6,  // 31: suggest.SuggestService.SuggestOutlines:output_type -> suggest.SuggestOutlinesResponse
	0,  // 32: suggest.SuggestService.SuggestExamQuestionV2:output_type -> suggest.SuggestExamQuestionResponseV2
	26, // [26:33] is the sub-list for method output_type
	19, // [19:26] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_proto_suggest_suggest_proto_init() }
func file_proto_suggest_suggest_proto_init() {
	if File_proto_suggest_suggest_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_suggest_suggest_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestExamQuestionResponseV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DifficultyDistribution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Topic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestExamQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestExamQuestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestOutlinesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestOutlinesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestInterviewQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestInterviewQuestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CriteriaEleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestCriteriaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CriteriaEleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestCriteriaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestOptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Question); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestQuestionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestQuestionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreInterviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreInterviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestExamQuestionResponseV2_Quetion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestExamQuestionResponseV2_Detail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestExamQuestionResponseV2_McqDetailCommonSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestExamQuestionResponseV2_LongAnswerDetailCommonSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestExamQuestionRequest_Context); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestInterviewQuestionRequest_Context); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestInterviewQuestionRequest_Submission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreInterviewRequest_Submission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreInterviewResponse_Submission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreInterviewResponse_SkillScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_suggest_suggest_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_suggest_suggest_proto_goTypes,
		DependencyIndexes: file_proto_suggest_suggest_proto_depIdxs,
		MessageInfos:      file_proto_suggest_suggest_proto_msgTypes,
	}.Build()
	File_proto_suggest_suggest_proto = out.File
	file_proto_suggest_suggest_proto_rawDesc = nil
	file_proto_suggest_suggest_proto_goTypes = nil
	file_proto_suggest_suggest_proto_depIdxs = nil
}
