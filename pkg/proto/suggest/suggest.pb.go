// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: proto/suggest/suggest.proto

package suggest

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GeneralInfo struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Title                string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description          string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Duration             string                 `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Difficulty           string                 `protobuf:"bytes,4,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	MaxNumberOfQuestions int32                  `protobuf:"varint,5,opt,name=maxNumberOfQuestions,proto3" json:"maxNumberOfQuestions,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GeneralInfo) Reset() {
	*x = GeneralInfo{}
	mi := &file_proto_suggest_suggest_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeneralInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralInfo) ProtoMessage() {}

func (x *GeneralInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralInfo.ProtoReflect.Descriptor instead.
func (*GeneralInfo) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{0}
}

func (x *GeneralInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GeneralInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GeneralInfo) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *GeneralInfo) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *GeneralInfo) GetMaxNumberOfQuestions() int32 {
	if x != nil {
		return x.MaxNumberOfQuestions
	}
	return 0
}

type CriteriaEleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Criteria      string                 `protobuf:"bytes,1,opt,name=criteria,proto3" json:"criteria,omitempty"`
	ChosenOption  string                 `protobuf:"bytes,2,opt,name=chosenOption,proto3" json:"chosenOption,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CriteriaEleRequest) Reset() {
	*x = CriteriaEleRequest{}
	mi := &file_proto_suggest_suggest_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CriteriaEleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CriteriaEleRequest) ProtoMessage() {}

func (x *CriteriaEleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CriteriaEleRequest.ProtoReflect.Descriptor instead.
func (*CriteriaEleRequest) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{1}
}

func (x *CriteriaEleRequest) GetCriteria() string {
	if x != nil {
		return x.Criteria
	}
	return ""
}

func (x *CriteriaEleRequest) GetChosenOption() string {
	if x != nil {
		return x.ChosenOption
	}
	return ""
}

type SuggestCriteriaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GeneralInfo   *GeneralInfo           `protobuf:"bytes,1,opt,name=generalInfo,proto3" json:"generalInfo,omitempty"`
	CriteriaList  []*CriteriaEleRequest  `protobuf:"bytes,2,rep,name=criteriaList,proto3" json:"criteriaList,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SuggestCriteriaRequest) Reset() {
	*x = SuggestCriteriaRequest{}
	mi := &file_proto_suggest_suggest_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuggestCriteriaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestCriteriaRequest) ProtoMessage() {}

func (x *SuggestCriteriaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestCriteriaRequest.ProtoReflect.Descriptor instead.
func (*SuggestCriteriaRequest) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{2}
}

func (x *SuggestCriteriaRequest) GetGeneralInfo() *GeneralInfo {
	if x != nil {
		return x.GeneralInfo
	}
	return nil
}

func (x *SuggestCriteriaRequest) GetCriteriaList() []*CriteriaEleRequest {
	if x != nil {
		return x.CriteriaList
	}
	return nil
}

type CriteriaEleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Criteria      string                 `protobuf:"bytes,1,opt,name=criteria,proto3" json:"criteria,omitempty"`
	OptionList    []string               `protobuf:"bytes,2,rep,name=optionList,proto3" json:"optionList,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CriteriaEleResponse) Reset() {
	*x = CriteriaEleResponse{}
	mi := &file_proto_suggest_suggest_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CriteriaEleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CriteriaEleResponse) ProtoMessage() {}

func (x *CriteriaEleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CriteriaEleResponse.ProtoReflect.Descriptor instead.
func (*CriteriaEleResponse) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{3}
}

func (x *CriteriaEleResponse) GetCriteria() string {
	if x != nil {
		return x.Criteria
	}
	return ""
}

func (x *CriteriaEleResponse) GetOptionList() []string {
	if x != nil {
		return x.OptionList
	}
	return nil
}

type SuggestCriteriaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CriteriaList  []*CriteriaEleResponse `protobuf:"bytes,1,rep,name=criteriaList,proto3" json:"criteriaList,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SuggestCriteriaResponse) Reset() {
	*x = SuggestCriteriaResponse{}
	mi := &file_proto_suggest_suggest_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuggestCriteriaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestCriteriaResponse) ProtoMessage() {}

func (x *SuggestCriteriaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestCriteriaResponse.ProtoReflect.Descriptor instead.
func (*SuggestCriteriaResponse) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{4}
}

func (x *SuggestCriteriaResponse) GetCriteriaList() []*CriteriaEleResponse {
	if x != nil {
		return x.CriteriaList
	}
	return nil
}

type SuggestOptionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GeneralInfo   *GeneralInfo           `protobuf:"bytes,1,opt,name=generalInfo,proto3" json:"generalInfo,omitempty"`
	CriteriaList  []*CriteriaEleRequest  `protobuf:"bytes,2,rep,name=criteriaList,proto3" json:"criteriaList,omitempty"`
	NewCriteria   string                 `protobuf:"bytes,3,opt,name=newCriteria,proto3" json:"newCriteria,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SuggestOptionsRequest) Reset() {
	*x = SuggestOptionsRequest{}
	mi := &file_proto_suggest_suggest_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuggestOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestOptionsRequest) ProtoMessage() {}

func (x *SuggestOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestOptionsRequest.ProtoReflect.Descriptor instead.
func (*SuggestOptionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{5}
}

func (x *SuggestOptionsRequest) GetGeneralInfo() *GeneralInfo {
	if x != nil {
		return x.GeneralInfo
	}
	return nil
}

func (x *SuggestOptionsRequest) GetCriteriaList() []*CriteriaEleRequest {
	if x != nil {
		return x.CriteriaList
	}
	return nil
}

func (x *SuggestOptionsRequest) GetNewCriteria() string {
	if x != nil {
		return x.NewCriteria
	}
	return ""
}

type SuggestOptionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CriteriaList  *CriteriaEleResponse   `protobuf:"bytes,1,opt,name=criteriaList,proto3" json:"criteriaList,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SuggestOptionsResponse) Reset() {
	*x = SuggestOptionsResponse{}
	mi := &file_proto_suggest_suggest_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuggestOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestOptionsResponse) ProtoMessage() {}

func (x *SuggestOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestOptionsResponse.ProtoReflect.Descriptor instead.
func (*SuggestOptionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{6}
}

func (x *SuggestOptionsResponse) GetCriteriaList() *CriteriaEleResponse {
	if x != nil {
		return x.CriteriaList
	}
	return nil
}

type AnswerOption struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OptionContent string                 `protobuf:"bytes,1,opt,name=optionContent,proto3" json:"optionContent,omitempty"`
	IsCorrect     bool                   `protobuf:"varint,2,opt,name=isCorrect,proto3" json:"isCorrect,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnswerOption) Reset() {
	*x = AnswerOption{}
	mi := &file_proto_suggest_suggest_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnswerOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerOption) ProtoMessage() {}

func (x *AnswerOption) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerOption.ProtoReflect.Descriptor instead.
func (*AnswerOption) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{7}
}

func (x *AnswerOption) GetOptionContent() string {
	if x != nil {
		return x.OptionContent
	}
	return ""
}

func (x *AnswerOption) GetIsCorrect() bool {
	if x != nil {
		return x.IsCorrect
	}
	return false
}

type Question struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	QuestionContent string                 `protobuf:"bytes,1,opt,name=questionContent,proto3" json:"questionContent,omitempty"`
	OptionList      []*AnswerOption        `protobuf:"bytes,2,rep,name=optionList,proto3" json:"optionList,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Question) Reset() {
	*x = Question{}
	mi := &file_proto_suggest_suggest_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Question) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Question) ProtoMessage() {}

func (x *Question) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Question.ProtoReflect.Descriptor instead.
func (*Question) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{8}
}

func (x *Question) GetQuestionContent() string {
	if x != nil {
		return x.QuestionContent
	}
	return ""
}

func (x *Question) GetOptionList() []*AnswerOption {
	if x != nil {
		return x.OptionList
	}
	return nil
}

type SuggestQuestionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GeneralInfo   *GeneralInfo           `protobuf:"bytes,1,opt,name=generalInfo,proto3" json:"generalInfo,omitempty"`
	CriteriaList  []*CriteriaEleRequest  `protobuf:"bytes,2,rep,name=criteriaList,proto3" json:"criteriaList,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SuggestQuestionsRequest) Reset() {
	*x = SuggestQuestionsRequest{}
	mi := &file_proto_suggest_suggest_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuggestQuestionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestQuestionsRequest) ProtoMessage() {}

func (x *SuggestQuestionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestQuestionsRequest.ProtoReflect.Descriptor instead.
func (*SuggestQuestionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{9}
}

func (x *SuggestQuestionsRequest) GetGeneralInfo() *GeneralInfo {
	if x != nil {
		return x.GeneralInfo
	}
	return nil
}

func (x *SuggestQuestionsRequest) GetCriteriaList() []*CriteriaEleRequest {
	if x != nil {
		return x.CriteriaList
	}
	return nil
}

type SuggestQuestionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QuestionList  []*Question            `protobuf:"bytes,1,rep,name=questionList,proto3" json:"questionList,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SuggestQuestionsResponse) Reset() {
	*x = SuggestQuestionsResponse{}
	mi := &file_proto_suggest_suggest_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuggestQuestionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestQuestionsResponse) ProtoMessage() {}

func (x *SuggestQuestionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestQuestionsResponse.ProtoReflect.Descriptor instead.
func (*SuggestQuestionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{10}
}

func (x *SuggestQuestionsResponse) GetQuestionList() []*Question {
	if x != nil {
		return x.QuestionList
	}
	return nil
}

var File_proto_suggest_suggest_proto protoreflect.FileDescriptor

var file_proto_suggest_suggest_proto_rawDesc = string([]byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2f,
	0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb5, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66,
	0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69,
	0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x14, 0x6d, 0x61, 0x78, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x4f, 0x66, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x54, 0x0a, 0x12,
	0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x45, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x91, 0x01, 0x0a, 0x16, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x43, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a,
	0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0c, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x45, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x51, 0x0a, 0x13, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x45, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x5b, 0x0a, 0x17, 0x53, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x45, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb2, 0x01, 0x0a, 0x15, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x36, 0x0a, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0c, 0x63, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x45, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x63, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x77,
	0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6e, 0x65, 0x77, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x22, 0x5a, 0x0a, 0x16, 0x53,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x45, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x63, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x52, 0x0a, 0x0c, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x22, 0x6b, 0x0a, 0x08, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x35, 0x0a, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x17, 0x53, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0c,
	0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x45, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0c, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x51, 0x0a,
	0x18, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x32, 0xf5, 0x02, 0x0a, 0x0e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x0f, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x43, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x1f, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x71, 0x0a, 0x0e, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x2e, 0x73,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x79, 0x0a,
	0x10, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x20, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01,
	0x2a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x17, 0x5a, 0x15, 0x6d, 0x79, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_suggest_suggest_proto_rawDescOnce sync.Once
	file_proto_suggest_suggest_proto_rawDescData []byte
)

func file_proto_suggest_suggest_proto_rawDescGZIP() []byte {
	file_proto_suggest_suggest_proto_rawDescOnce.Do(func() {
		file_proto_suggest_suggest_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_suggest_suggest_proto_rawDesc), len(file_proto_suggest_suggest_proto_rawDesc)))
	})
	return file_proto_suggest_suggest_proto_rawDescData
}

var file_proto_suggest_suggest_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_suggest_suggest_proto_goTypes = []any{
	(*GeneralInfo)(nil),              // 0: suggest.GeneralInfo
	(*CriteriaEleRequest)(nil),       // 1: suggest.CriteriaEleRequest
	(*SuggestCriteriaRequest)(nil),   // 2: suggest.SuggestCriteriaRequest
	(*CriteriaEleResponse)(nil),      // 3: suggest.CriteriaEleResponse
	(*SuggestCriteriaResponse)(nil),  // 4: suggest.SuggestCriteriaResponse
	(*SuggestOptionsRequest)(nil),    // 5: suggest.SuggestOptionsRequest
	(*SuggestOptionsResponse)(nil),   // 6: suggest.SuggestOptionsResponse
	(*AnswerOption)(nil),             // 7: suggest.AnswerOption
	(*Question)(nil),                 // 8: suggest.Question
	(*SuggestQuestionsRequest)(nil),  // 9: suggest.SuggestQuestionsRequest
	(*SuggestQuestionsResponse)(nil), // 10: suggest.SuggestQuestionsResponse
}
var file_proto_suggest_suggest_proto_depIdxs = []int32{
	0,  // 0: suggest.SuggestCriteriaRequest.generalInfo:type_name -> suggest.GeneralInfo
	1,  // 1: suggest.SuggestCriteriaRequest.criteriaList:type_name -> suggest.CriteriaEleRequest
	3,  // 2: suggest.SuggestCriteriaResponse.criteriaList:type_name -> suggest.CriteriaEleResponse
	0,  // 3: suggest.SuggestOptionsRequest.generalInfo:type_name -> suggest.GeneralInfo
	1,  // 4: suggest.SuggestOptionsRequest.criteriaList:type_name -> suggest.CriteriaEleRequest
	3,  // 5: suggest.SuggestOptionsResponse.criteriaList:type_name -> suggest.CriteriaEleResponse
	7,  // 6: suggest.Question.optionList:type_name -> suggest.AnswerOption
	0,  // 7: suggest.SuggestQuestionsRequest.generalInfo:type_name -> suggest.GeneralInfo
	1,  // 8: suggest.SuggestQuestionsRequest.criteriaList:type_name -> suggest.CriteriaEleRequest
	8,  // 9: suggest.SuggestQuestionsResponse.questionList:type_name -> suggest.Question
	2,  // 10: suggest.SuggestService.SuggestCriteria:input_type -> suggest.SuggestCriteriaRequest
	5,  // 11: suggest.SuggestService.SuggestOptions:input_type -> suggest.SuggestOptionsRequest
	9,  // 12: suggest.SuggestService.SuggestQuestions:input_type -> suggest.SuggestQuestionsRequest
	4,  // 13: suggest.SuggestService.SuggestCriteria:output_type -> suggest.SuggestCriteriaResponse
	6,  // 14: suggest.SuggestService.SuggestOptions:output_type -> suggest.SuggestOptionsResponse
	10, // 15: suggest.SuggestService.SuggestQuestions:output_type -> suggest.SuggestQuestionsResponse
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_suggest_suggest_proto_init() }
func file_proto_suggest_suggest_proto_init() {
	if File_proto_suggest_suggest_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_suggest_suggest_proto_rawDesc), len(file_proto_suggest_suggest_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_suggest_suggest_proto_goTypes,
		DependencyIndexes: file_proto_suggest_suggest_proto_depIdxs,
		MessageInfos:      file_proto_suggest_suggest_proto_msgTypes,
	}.Build()
	File_proto_suggest_suggest_proto = out.File
	file_proto_suggest_suggest_proto_goTypes = nil
	file_proto_suggest_suggest_proto_depIdxs = nil
}
