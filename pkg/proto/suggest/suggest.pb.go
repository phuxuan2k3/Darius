// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: proto/suggest/suggest.proto

package suggest

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SuggestInterviewQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context            *SuggestInterviewQuestionRequest_Context      `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Submissions        []*SuggestInterviewQuestionRequest_Submission `protobuf:"bytes,2,rep,name=submissions,proto3" json:"submissions,omitempty"`
	RemainingQuestions int32                                         `protobuf:"varint,3,opt,name=remainingQuestions,proto3" json:"remainingQuestions,omitempty"`
}

func (x *SuggestInterviewQuestionRequest) Reset() {
	*x = SuggestInterviewQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestInterviewQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestInterviewQuestionRequest) ProtoMessage() {}

func (x *SuggestInterviewQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestInterviewQuestionRequest.ProtoReflect.Descriptor instead.
func (*SuggestInterviewQuestionRequest) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{0}
}

func (x *SuggestInterviewQuestionRequest) GetContext() *SuggestInterviewQuestionRequest_Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *SuggestInterviewQuestionRequest) GetSubmissions() []*SuggestInterviewQuestionRequest_Submission {
	if x != nil {
		return x.Submissions
	}
	return nil
}

func (x *SuggestInterviewQuestionRequest) GetRemainingQuestions() int32 {
	if x != nil {
		return x.RemainingQuestions
	}
	return 0
}

type SuggestInterviewQuestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Questions []string `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *SuggestInterviewQuestionResponse) Reset() {
	*x = SuggestInterviewQuestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestInterviewQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestInterviewQuestionResponse) ProtoMessage() {}

func (x *SuggestInterviewQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestInterviewQuestionResponse.ProtoReflect.Descriptor instead.
func (*SuggestInterviewQuestionResponse) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{1}
}

func (x *SuggestInterviewQuestionResponse) GetQuestions() []string {
	if x != nil {
		return x.Questions
	}
	return nil
}

type GeneralInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title                string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description          string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Duration             string `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Difficulty           string `protobuf:"bytes,4,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	MaxNumberOfQuestions int32  `protobuf:"varint,5,opt,name=maxNumberOfQuestions,proto3" json:"maxNumberOfQuestions,omitempty"`
}

func (x *GeneralInfo) Reset() {
	*x = GeneralInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralInfo) ProtoMessage() {}

func (x *GeneralInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralInfo.ProtoReflect.Descriptor instead.
func (*GeneralInfo) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{2}
}

func (x *GeneralInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GeneralInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GeneralInfo) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *GeneralInfo) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *GeneralInfo) GetMaxNumberOfQuestions() int32 {
	if x != nil {
		return x.MaxNumberOfQuestions
	}
	return 0
}

type CriteriaEleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Criteria     string `protobuf:"bytes,1,opt,name=criteria,proto3" json:"criteria,omitempty"`
	ChosenOption string `protobuf:"bytes,2,opt,name=chosenOption,proto3" json:"chosenOption,omitempty"`
}

func (x *CriteriaEleRequest) Reset() {
	*x = CriteriaEleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CriteriaEleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CriteriaEleRequest) ProtoMessage() {}

func (x *CriteriaEleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CriteriaEleRequest.ProtoReflect.Descriptor instead.
func (*CriteriaEleRequest) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{3}
}

func (x *CriteriaEleRequest) GetCriteria() string {
	if x != nil {
		return x.Criteria
	}
	return ""
}

func (x *CriteriaEleRequest) GetChosenOption() string {
	if x != nil {
		return x.ChosenOption
	}
	return ""
}

type SuggestCriteriaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeneralInfo  *GeneralInfo          `protobuf:"bytes,1,opt,name=generalInfo,proto3" json:"generalInfo,omitempty"`
	CriteriaList []*CriteriaEleRequest `protobuf:"bytes,2,rep,name=criteriaList,proto3" json:"criteriaList,omitempty"`
}

func (x *SuggestCriteriaRequest) Reset() {
	*x = SuggestCriteriaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestCriteriaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestCriteriaRequest) ProtoMessage() {}

func (x *SuggestCriteriaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestCriteriaRequest.ProtoReflect.Descriptor instead.
func (*SuggestCriteriaRequest) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{4}
}

func (x *SuggestCriteriaRequest) GetGeneralInfo() *GeneralInfo {
	if x != nil {
		return x.GeneralInfo
	}
	return nil
}

func (x *SuggestCriteriaRequest) GetCriteriaList() []*CriteriaEleRequest {
	if x != nil {
		return x.CriteriaList
	}
	return nil
}

type CriteriaEleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Criteria   string   `protobuf:"bytes,1,opt,name=criteria,proto3" json:"criteria,omitempty"`
	OptionList []string `protobuf:"bytes,2,rep,name=optionList,proto3" json:"optionList,omitempty"`
}

func (x *CriteriaEleResponse) Reset() {
	*x = CriteriaEleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CriteriaEleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CriteriaEleResponse) ProtoMessage() {}

func (x *CriteriaEleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CriteriaEleResponse.ProtoReflect.Descriptor instead.
func (*CriteriaEleResponse) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{5}
}

func (x *CriteriaEleResponse) GetCriteria() string {
	if x != nil {
		return x.Criteria
	}
	return ""
}

func (x *CriteriaEleResponse) GetOptionList() []string {
	if x != nil {
		return x.OptionList
	}
	return nil
}

type SuggestCriteriaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CriteriaList []*CriteriaEleResponse `protobuf:"bytes,1,rep,name=criteriaList,proto3" json:"criteriaList,omitempty"`
}

func (x *SuggestCriteriaResponse) Reset() {
	*x = SuggestCriteriaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestCriteriaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestCriteriaResponse) ProtoMessage() {}

func (x *SuggestCriteriaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestCriteriaResponse.ProtoReflect.Descriptor instead.
func (*SuggestCriteriaResponse) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{6}
}

func (x *SuggestCriteriaResponse) GetCriteriaList() []*CriteriaEleResponse {
	if x != nil {
		return x.CriteriaList
	}
	return nil
}

type SuggestOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeneralInfo  *GeneralInfo          `protobuf:"bytes,1,opt,name=generalInfo,proto3" json:"generalInfo,omitempty"`
	CriteriaList []*CriteriaEleRequest `protobuf:"bytes,2,rep,name=criteriaList,proto3" json:"criteriaList,omitempty"`
	NewCriteria  string                `protobuf:"bytes,3,opt,name=newCriteria,proto3" json:"newCriteria,omitempty"`
}

func (x *SuggestOptionsRequest) Reset() {
	*x = SuggestOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestOptionsRequest) ProtoMessage() {}

func (x *SuggestOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestOptionsRequest.ProtoReflect.Descriptor instead.
func (*SuggestOptionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{7}
}

func (x *SuggestOptionsRequest) GetGeneralInfo() *GeneralInfo {
	if x != nil {
		return x.GeneralInfo
	}
	return nil
}

func (x *SuggestOptionsRequest) GetCriteriaList() []*CriteriaEleRequest {
	if x != nil {
		return x.CriteriaList
	}
	return nil
}

func (x *SuggestOptionsRequest) GetNewCriteria() string {
	if x != nil {
		return x.NewCriteria
	}
	return ""
}

type SuggestOptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CriteriaList *CriteriaEleResponse `protobuf:"bytes,1,opt,name=criteriaList,proto3" json:"criteriaList,omitempty"`
}

func (x *SuggestOptionsResponse) Reset() {
	*x = SuggestOptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestOptionsResponse) ProtoMessage() {}

func (x *SuggestOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestOptionsResponse.ProtoReflect.Descriptor instead.
func (*SuggestOptionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{8}
}

func (x *SuggestOptionsResponse) GetCriteriaList() *CriteriaEleResponse {
	if x != nil {
		return x.CriteriaList
	}
	return nil
}

type AnswerOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptionContent string `protobuf:"bytes,1,opt,name=optionContent,proto3" json:"optionContent,omitempty"`
	IsCorrect     bool   `protobuf:"varint,2,opt,name=isCorrect,proto3" json:"isCorrect,omitempty"`
}

func (x *AnswerOption) Reset() {
	*x = AnswerOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerOption) ProtoMessage() {}

func (x *AnswerOption) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerOption.ProtoReflect.Descriptor instead.
func (*AnswerOption) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{9}
}

func (x *AnswerOption) GetOptionContent() string {
	if x != nil {
		return x.OptionContent
	}
	return ""
}

func (x *AnswerOption) GetIsCorrect() bool {
	if x != nil {
		return x.IsCorrect
	}
	return false
}

type Question struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionContent string          `protobuf:"bytes,1,opt,name=questionContent,proto3" json:"questionContent,omitempty"`
	OptionList      []*AnswerOption `protobuf:"bytes,2,rep,name=optionList,proto3" json:"optionList,omitempty"`
}

func (x *Question) Reset() {
	*x = Question{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Question) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Question) ProtoMessage() {}

func (x *Question) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Question.ProtoReflect.Descriptor instead.
func (*Question) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{10}
}

func (x *Question) GetQuestionContent() string {
	if x != nil {
		return x.QuestionContent
	}
	return ""
}

func (x *Question) GetOptionList() []*AnswerOption {
	if x != nil {
		return x.OptionList
	}
	return nil
}

type SuggestQuestionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionList []*Question `protobuf:"bytes,1,rep,name=questionList,proto3" json:"questionList,omitempty"`
}

func (x *SuggestQuestionsResponse) Reset() {
	*x = SuggestQuestionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestQuestionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestQuestionsResponse) ProtoMessage() {}

func (x *SuggestQuestionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestQuestionsResponse.ProtoReflect.Descriptor instead.
func (*SuggestQuestionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{11}
}

func (x *SuggestQuestionsResponse) GetQuestionList() []*Question {
	if x != nil {
		return x.QuestionList
	}
	return nil
}

type SuggestQuestionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description        string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Fields             []string `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	Duration           string   `protobuf:"bytes,4,opt,name=duration,proto3" json:"duration,omitempty"`
	Difficulty         string   `protobuf:"bytes,5,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	QuestionType       string   `protobuf:"bytes,6,opt,name=question_type,json=questionType,proto3" json:"question_type,omitempty"`
	Language           string   `protobuf:"bytes,7,opt,name=language,proto3" json:"language,omitempty"`
	Options            int32    `protobuf:"varint,8,opt,name=options,proto3" json:"options,omitempty"`
	NumberOfQuestion   int32    `protobuf:"varint,9,opt,name=number_of_question,json=numberOfQuestion,proto3" json:"number_of_question,omitempty"`
	CandidateSeniority string   `protobuf:"bytes,10,opt,name=candidate_seniority,json=candidateSeniority,proto3" json:"candidate_seniority,omitempty"`
	Context            string   `protobuf:"bytes,11,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *SuggestQuestionsRequest) Reset() {
	*x = SuggestQuestionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestQuestionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestQuestionsRequest) ProtoMessage() {}

func (x *SuggestQuestionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestQuestionsRequest.ProtoReflect.Descriptor instead.
func (*SuggestQuestionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{12}
}

func (x *SuggestQuestionsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SuggestQuestionsRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SuggestQuestionsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *SuggestQuestionsRequest) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *SuggestQuestionsRequest) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *SuggestQuestionsRequest) GetQuestionType() string {
	if x != nil {
		return x.QuestionType
	}
	return ""
}

func (x *SuggestQuestionsRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SuggestQuestionsRequest) GetOptions() int32 {
	if x != nil {
		return x.Options
	}
	return 0
}

func (x *SuggestQuestionsRequest) GetNumberOfQuestion() int32 {
	if x != nil {
		return x.NumberOfQuestion
	}
	return 0
}

func (x *SuggestQuestionsRequest) GetCandidateSeniority() string {
	if x != nil {
		return x.CandidateSeniority
	}
	return ""
}

func (x *SuggestQuestionsRequest) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

type ScoreInterviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Submissions []*ScoreInterviewRequest_Submission `protobuf:"bytes,1,rep,name=submissions,proto3" json:"submissions,omitempty"`
}

func (x *ScoreInterviewRequest) Reset() {
	*x = ScoreInterviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreInterviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreInterviewRequest) ProtoMessage() {}

func (x *ScoreInterviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreInterviewRequest.ProtoReflect.Descriptor instead.
func (*ScoreInterviewRequest) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{13}
}

func (x *ScoreInterviewRequest) GetSubmissions() []*ScoreInterviewRequest_Submission {
	if x != nil {
		return x.Submissions
	}
	return nil
}

type ScoreInterviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result             []*ScoreInterviewResponse_Submission `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	TotalScore         map[string]int32                     `protobuf:"bytes,2,rep,name=totalScore,proto3" json:"totalScore,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	PositiveFeedback   string                               `protobuf:"bytes,3,opt,name=positiveFeedback,proto3" json:"positiveFeedback,omitempty"`
	ActionableFeedback string                               `protobuf:"bytes,4,opt,name=actionableFeedback,proto3" json:"actionableFeedback,omitempty"`
	FinalComment       string                               `protobuf:"bytes,5,opt,name=finalComment,proto3" json:"finalComment,omitempty"`
}

func (x *ScoreInterviewResponse) Reset() {
	*x = ScoreInterviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreInterviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreInterviewResponse) ProtoMessage() {}

func (x *ScoreInterviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreInterviewResponse.ProtoReflect.Descriptor instead.
func (*ScoreInterviewResponse) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{14}
}

func (x *ScoreInterviewResponse) GetResult() []*ScoreInterviewResponse_Submission {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ScoreInterviewResponse) GetTotalScore() map[string]int32 {
	if x != nil {
		return x.TotalScore
	}
	return nil
}

func (x *ScoreInterviewResponse) GetPositiveFeedback() string {
	if x != nil {
		return x.PositiveFeedback
	}
	return ""
}

func (x *ScoreInterviewResponse) GetActionableFeedback() string {
	if x != nil {
		return x.ActionableFeedback
	}
	return ""
}

func (x *ScoreInterviewResponse) GetFinalComment() string {
	if x != nil {
		return x.FinalComment
	}
	return ""
}

type SuggestInterviewQuestionRequest_Context struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position     string `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Experience   string `protobuf:"bytes,2,opt,name=experience,proto3" json:"experience,omitempty"`
	Language     string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
	Models       string `protobuf:"bytes,4,opt,name=models,proto3" json:"models,omitempty"`
	Speed        int32  `protobuf:"varint,5,opt,name=speed,proto3" json:"speed,omitempty"`
	Skills       string `protobuf:"bytes,6,opt,name=skills,proto3" json:"skills,omitempty"`
	MaxQuestions int32  `protobuf:"varint,7,opt,name=maxQuestions,proto3" json:"maxQuestions,omitempty"`
	SkipIntro    bool   `protobuf:"varint,8,opt,name=skipIntro,proto3" json:"skipIntro,omitempty"`
	SkipCode     bool   `protobuf:"varint,9,opt,name=skipCode,proto3" json:"skipCode,omitempty"`
	InterviewId  string `protobuf:"bytes,10,opt,name=interviewId,proto3" json:"interviewId,omitempty"`
}

func (x *SuggestInterviewQuestionRequest_Context) Reset() {
	*x = SuggestInterviewQuestionRequest_Context{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestInterviewQuestionRequest_Context) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestInterviewQuestionRequest_Context) ProtoMessage() {}

func (x *SuggestInterviewQuestionRequest_Context) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestInterviewQuestionRequest_Context.ProtoReflect.Descriptor instead.
func (*SuggestInterviewQuestionRequest_Context) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{0, 0}
}

func (x *SuggestInterviewQuestionRequest_Context) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *SuggestInterviewQuestionRequest_Context) GetExperience() string {
	if x != nil {
		return x.Experience
	}
	return ""
}

func (x *SuggestInterviewQuestionRequest_Context) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SuggestInterviewQuestionRequest_Context) GetModels() string {
	if x != nil {
		return x.Models
	}
	return ""
}

func (x *SuggestInterviewQuestionRequest_Context) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *SuggestInterviewQuestionRequest_Context) GetSkills() string {
	if x != nil {
		return x.Skills
	}
	return ""
}

func (x *SuggestInterviewQuestionRequest_Context) GetMaxQuestions() int32 {
	if x != nil {
		return x.MaxQuestions
	}
	return 0
}

func (x *SuggestInterviewQuestionRequest_Context) GetSkipIntro() bool {
	if x != nil {
		return x.SkipIntro
	}
	return false
}

func (x *SuggestInterviewQuestionRequest_Context) GetSkipCode() bool {
	if x != nil {
		return x.SkipCode
	}
	return false
}

func (x *SuggestInterviewQuestionRequest_Context) GetInterviewId() string {
	if x != nil {
		return x.InterviewId
	}
	return ""
}

type SuggestInterviewQuestionRequest_Submission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question string `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	Answer   string `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *SuggestInterviewQuestionRequest_Submission) Reset() {
	*x = SuggestInterviewQuestionRequest_Submission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestInterviewQuestionRequest_Submission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestInterviewQuestionRequest_Submission) ProtoMessage() {}

func (x *SuggestInterviewQuestionRequest_Submission) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestInterviewQuestionRequest_Submission.ProtoReflect.Descriptor instead.
func (*SuggestInterviewQuestionRequest_Submission) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{0, 1}
}

func (x *SuggestInterviewQuestionRequest_Submission) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *SuggestInterviewQuestionRequest_Submission) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

type ScoreInterviewRequest_Submission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index    int32  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Question string `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	Answer   string `protobuf:"bytes,3,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *ScoreInterviewRequest_Submission) Reset() {
	*x = ScoreInterviewRequest_Submission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreInterviewRequest_Submission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreInterviewRequest_Submission) ProtoMessage() {}

func (x *ScoreInterviewRequest_Submission) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreInterviewRequest_Submission.ProtoReflect.Descriptor instead.
func (*ScoreInterviewRequest_Submission) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{13, 0}
}

func (x *ScoreInterviewRequest_Submission) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ScoreInterviewRequest_Submission) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *ScoreInterviewRequest_Submission) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

type ScoreInterviewResponse_Submission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index   int32  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	Score   string `protobuf:"bytes,3,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *ScoreInterviewResponse_Submission) Reset() {
	*x = ScoreInterviewResponse_Submission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_suggest_suggest_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreInterviewResponse_Submission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreInterviewResponse_Submission) ProtoMessage() {}

func (x *ScoreInterviewResponse_Submission) ProtoReflect() protoreflect.Message {
	mi := &file_proto_suggest_suggest_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreInterviewResponse_Submission.ProtoReflect.Descriptor instead.
func (*ScoreInterviewResponse_Submission) Descriptor() ([]byte, []int) {
	return file_proto_suggest_suggest_proto_rawDescGZIP(), []int{14, 0}
}

func (x *ScoreInterviewResponse_Submission) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ScoreInterviewResponse_Submission) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ScoreInterviewResponse_Submission) GetScore() string {
	if x != nil {
		return x.Score
	}
	return ""
}

var File_proto_suggest_suggest_proto protoreflect.FileDescriptor

var file_proto_suggest_suggest_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2f,
	0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe0, 0x04, 0x0a, 0x1f, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x55, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x72,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xa7, 0x02, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x78,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6b, 0x69,
	0x70, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x6b,
	0x69, 0x70, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x6b, 0x69, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77,
	0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x69, 0x65, 0x77, 0x49, 0x64, 0x1a, 0x40, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x40, 0x0a, 0x20, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x0b, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x32, 0x0a,
	0x14, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6d, 0x61, 0x78,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x54, 0x0a, 0x12, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x45, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x6f, 0x73, 0x65,
	0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x91, 0x01, 0x0a, 0x16, 0x53, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0c, 0x63, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x45, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x63,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x51, 0x0a, 0x13, 0x43,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x45, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x1e,
	0x0a, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x5b,
	0x0a, 0x17, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x63, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x45, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x63,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb2, 0x01, 0x0a, 0x15,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a,
	0x0c, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x45, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0c, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x22, 0x5a, 0x0a, 0x16, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x63, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x45, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c,
	0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x52, 0x0a, 0x0c,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74,
	0x22, 0x6b, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x51, 0x0a,
	0x18, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0xf7, 0x02, 0x0a, 0x17, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63,
	0x75, 0x6c, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66,
	0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2f, 0x0a, 0x13, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x6e,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x61,
	0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0xbc, 0x01, 0x0a, 0x15, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x1a, 0x56, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0xc0, 0x03, 0x0a, 0x16, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4f, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x2e, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x52, 0x0a, 0x0a, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x1a, 0x3d, 0x0a,
	0x0f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x85, 0x05, 0x0a,
	0x0e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x75, 0x0a, 0x0f, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x12, 0x1f, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a,
	0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x71, 0x0a, 0x0e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x79, 0x0a, 0x10, 0x53, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x2e,
	0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x9a, 0x01, 0x0a, 0x18, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x28, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01,
	0x2a, 0x22, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x71, 0x0a, 0x0e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x69, 0x65, 0x77, 0x12, 0x1e, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22,
	0x13, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x42, 0x17, 0x5a, 0x15, 0x6d, 0x79, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_suggest_suggest_proto_rawDescOnce sync.Once
	file_proto_suggest_suggest_proto_rawDescData = file_proto_suggest_suggest_proto_rawDesc
)

func file_proto_suggest_suggest_proto_rawDescGZIP() []byte {
	file_proto_suggest_suggest_proto_rawDescOnce.Do(func() {
		file_proto_suggest_suggest_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_suggest_suggest_proto_rawDescData)
	})
	return file_proto_suggest_suggest_proto_rawDescData
}

var file_proto_suggest_suggest_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_proto_suggest_suggest_proto_goTypes = []interface{}{
	(*SuggestInterviewQuestionRequest)(nil),            // 0: suggest.SuggestInterviewQuestionRequest
	(*SuggestInterviewQuestionResponse)(nil),           // 1: suggest.SuggestInterviewQuestionResponse
	(*GeneralInfo)(nil),                                // 2: suggest.GeneralInfo
	(*CriteriaEleRequest)(nil),                         // 3: suggest.CriteriaEleRequest
	(*SuggestCriteriaRequest)(nil),                     // 4: suggest.SuggestCriteriaRequest
	(*CriteriaEleResponse)(nil),                        // 5: suggest.CriteriaEleResponse
	(*SuggestCriteriaResponse)(nil),                    // 6: suggest.SuggestCriteriaResponse
	(*SuggestOptionsRequest)(nil),                      // 7: suggest.SuggestOptionsRequest
	(*SuggestOptionsResponse)(nil),                     // 8: suggest.SuggestOptionsResponse
	(*AnswerOption)(nil),                               // 9: suggest.AnswerOption
	(*Question)(nil),                                   // 10: suggest.Question
	(*SuggestQuestionsResponse)(nil),                   // 11: suggest.SuggestQuestionsResponse
	(*SuggestQuestionsRequest)(nil),                    // 12: suggest.SuggestQuestionsRequest
	(*ScoreInterviewRequest)(nil),                      // 13: suggest.ScoreInterviewRequest
	(*ScoreInterviewResponse)(nil),                     // 14: suggest.ScoreInterviewResponse
	(*SuggestInterviewQuestionRequest_Context)(nil),    // 15: suggest.SuggestInterviewQuestionRequest.Context
	(*SuggestInterviewQuestionRequest_Submission)(nil), // 16: suggest.SuggestInterviewQuestionRequest.Submission
	(*ScoreInterviewRequest_Submission)(nil),           // 17: suggest.ScoreInterviewRequest.Submission
	(*ScoreInterviewResponse_Submission)(nil),          // 18: suggest.ScoreInterviewResponse.Submission
	nil, // 19: suggest.ScoreInterviewResponse.TotalScoreEntry
}
var file_proto_suggest_suggest_proto_depIdxs = []int32{
	15, // 0: suggest.SuggestInterviewQuestionRequest.context:type_name -> suggest.SuggestInterviewQuestionRequest.Context
	16, // 1: suggest.SuggestInterviewQuestionRequest.submissions:type_name -> suggest.SuggestInterviewQuestionRequest.Submission
	2,  // 2: suggest.SuggestCriteriaRequest.generalInfo:type_name -> suggest.GeneralInfo
	3,  // 3: suggest.SuggestCriteriaRequest.criteriaList:type_name -> suggest.CriteriaEleRequest
	5,  // 4: suggest.SuggestCriteriaResponse.criteriaList:type_name -> suggest.CriteriaEleResponse
	2,  // 5: suggest.SuggestOptionsRequest.generalInfo:type_name -> suggest.GeneralInfo
	3,  // 6: suggest.SuggestOptionsRequest.criteriaList:type_name -> suggest.CriteriaEleRequest
	5,  // 7: suggest.SuggestOptionsResponse.criteriaList:type_name -> suggest.CriteriaEleResponse
	9,  // 8: suggest.Question.optionList:type_name -> suggest.AnswerOption
	10, // 9: suggest.SuggestQuestionsResponse.questionList:type_name -> suggest.Question
	17, // 10: suggest.ScoreInterviewRequest.submissions:type_name -> suggest.ScoreInterviewRequest.Submission
	18, // 11: suggest.ScoreInterviewResponse.result:type_name -> suggest.ScoreInterviewResponse.Submission
	19, // 12: suggest.ScoreInterviewResponse.totalScore:type_name -> suggest.ScoreInterviewResponse.TotalScoreEntry
	4,  // 13: suggest.SuggestService.SuggestCriteria:input_type -> suggest.SuggestCriteriaRequest
	7,  // 14: suggest.SuggestService.SuggestOptions:input_type -> suggest.SuggestOptionsRequest
	12, // 15: suggest.SuggestService.SuggestQuestions:input_type -> suggest.SuggestQuestionsRequest
	0,  // 16: suggest.SuggestService.SuggestInterviewQuestion:input_type -> suggest.SuggestInterviewQuestionRequest
	13, // 17: suggest.SuggestService.ScoreInterview:input_type -> suggest.ScoreInterviewRequest
	6,  // 18: suggest.SuggestService.SuggestCriteria:output_type -> suggest.SuggestCriteriaResponse
	8,  // 19: suggest.SuggestService.SuggestOptions:output_type -> suggest.SuggestOptionsResponse
	11, // 20: suggest.SuggestService.SuggestQuestions:output_type -> suggest.SuggestQuestionsResponse
	1,  // 21: suggest.SuggestService.SuggestInterviewQuestion:output_type -> suggest.SuggestInterviewQuestionResponse
	14, // 22: suggest.SuggestService.ScoreInterview:output_type -> suggest.ScoreInterviewResponse
	18, // [18:23] is the sub-list for method output_type
	13, // [13:18] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_suggest_suggest_proto_init() }
func file_proto_suggest_suggest_proto_init() {
	if File_proto_suggest_suggest_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_suggest_suggest_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestInterviewQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestInterviewQuestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CriteriaEleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestCriteriaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CriteriaEleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestCriteriaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestOptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Question); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestQuestionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestQuestionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreInterviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreInterviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestInterviewQuestionRequest_Context); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestInterviewQuestionRequest_Submission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreInterviewRequest_Submission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_suggest_suggest_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreInterviewResponse_Submission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_suggest_suggest_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_suggest_suggest_proto_goTypes,
		DependencyIndexes: file_proto_suggest_suggest_proto_depIdxs,
		MessageInfos:      file_proto_suggest_suggest_proto_msgTypes,
	}.Build()
	File_proto_suggest_suggest_proto = out.File
	file_proto_suggest_suggest_proto_rawDesc = nil
	file_proto_suggest_suggest_proto_goTypes = nil
	file_proto_suggest_suggest_proto_depIdxs = nil
}
